; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\control_task.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\control_task.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-步兵3.8（二段加速)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\control_task.crf ..\TASK\control_task.c]
                          THUMB

                          AREA ||i.control_task||, CODE, READONLY, ALIGN=2

                  control_task PROC
;;;6      u8 time_1ms = 0;
;;;7      void control_task() 
000000  b510              PUSH     {r4,lr}
;;;8      {
;;;9      	
;;;10     	remote_off_line();
000002  f7fffffe          BL       remote_off_line
;;;11     	if(run_flag == 1)//启动
000006  4816              LDR      r0,|L1.96|
000008  7800              LDRB     r0,[r0,#0]  ; run_flag
00000a  2801              CMP      r0,#1
00000c  d116              BNE      |L1.60|
;;;12     	{
;;;13     //		if(offset_OK_flag1 == 1)
;;;14     		{
;;;15     			if(time_1ms <= 3)//待数据稳定后开始执行
00000e  4815              LDR      r0,|L1.100|
000010  7800              LDRB     r0,[r0,#0]  ; time_1ms
000012  2803              CMP      r0,#3
000014  dc08              BGT      |L1.40|
;;;16     			{
;;;17     				angle_init(&t_angle);//位置设定值初始化
000016  4814              LDR      r0,|L1.104|
000018  f7fffffe          BL       angle_init
;;;18     				time_1ms ++;
00001c  4811              LDR      r0,|L1.100|
00001e  7800              LDRB     r0,[r0,#0]  ; time_1ms
000020  1c40              ADDS     r0,r0,#1
000022  4910              LDR      r1,|L1.100|
000024  7008              STRB     r0,[r1,#0]
000026  e01a              B        |L1.94|
                  |L1.40|
;;;19     			}
;;;20     			else
;;;21     			{
;;;22     				//控制算法
;;;23     				angle_out_update(&t_angle);//云台电机控制	
000028  480f              LDR      r0,|L1.104|
00002a  f7fffffe          BL       angle_out_update
;;;24     				if(t_angle.back_flag == 1)
00002e  480e              LDR      r0,|L1.104|
000030  6a00              LDR      r0,[r0,#0x20]  ; t_angle
000032  2801              CMP      r0,#1
000034  d113              BNE      |L1.94|
;;;25     				{
;;;26     					chassis_out_update();//底盘电机控制
000036  f7fffffe          BL       chassis_out_update
00003a  e010              B        |L1.94|
                  |L1.60|
;;;27     //					fireMotor();//摩擦轮控制
;;;28     //					ramp_calc();		
;;;29     //					if(ramp_start.back_flag == 1)
;;;30     //					{
;;;31     ////						fireMotor_keep();
;;;32     //						if(feed_state.shoot_plan_back == 0)
;;;33     //						{
;;;34     //							shoot_plan();
;;;35     //						}
;;;36     //						Shoot();//拨弹电机控制
;;;37     //					}
;;;38     //					else
;;;39     //					{
;;;40     //						feed_set.feed_angle_set = 0;
;;;41     //						feed_set.feed_speed_set = 0;
;;;42     //						Set_FeedMotor_Current((int16_t)0);
;;;43     //					}
;;;44     				}	
;;;45     			}
;;;46     		}
;;;47     	}
;;;48     	else if(run_flag == 2)//校准
00003c  4808              LDR      r0,|L1.96|
00003e  7800              LDRB     r0,[r0,#0]  ; run_flag
000040  2802              CMP      r0,#2
000042  d10c              BNE      |L1.94|
;;;49     	{
;;;50     		if(offset_OK_flag == 2)
000044  4809              LDR      r0,|L1.108|
000046  7800              LDRB     r0,[r0,#0]  ; offset_OK_flag
000048  2802              CMP      r0,#2
00004a  d102              BNE      |L1.82|
;;;51     		{
;;;52     			cali_gyro_hook();
00004c  f7fffffe          BL       cali_gyro_hook
000050  e005              B        |L1.94|
                  |L1.82|
;;;53     		}
;;;54     		else if(offset_OK_flag == 1)
000052  4806              LDR      r0,|L1.108|
000054  7800              LDRB     r0,[r0,#0]  ; offset_OK_flag
000056  2801              CMP      r0,#1
000058  d101              BNE      |L1.94|
;;;55     		{
;;;56     			run_flag = 1;
00005a  4901              LDR      r1,|L1.96|
00005c  7008              STRB     r0,[r1,#0]
                  |L1.94|
;;;57     		}
;;;58     	}
;;;59     }
00005e  bd10              POP      {r4,pc}
                          ENDP

                  |L1.96|
                          DCD      run_flag
                  |L1.100|
                          DCD      time_1ms
                  |L1.104|
                          DCD      t_angle
                  |L1.108|
                          DCD      offset_OK_flag

                          AREA ||.data||, DATA, ALIGN=0

                  time_1ms
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\TASK\\control_task.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_control_task_c_time_1ms____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___14_control_task_c_time_1ms____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_control_task_c_time_1ms____REVSH|
#line 153
|__asm___14_control_task_c_time_1ms____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_control_task_c_time_1ms____RRX|
#line 328
|__asm___14_control_task_c_time_1ms____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
