; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\timer.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\timer.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-²½±ø3.8£¨¶þ¶Î¼ÓËÙ)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\timer.crf ..\BSP\timer.c]
                          THUMB

                          AREA ||i.TIM6_Configure||, CODE, READONLY, ALIGN=2

                  TIM6_Configure PROC
;;;3      u8 time_ms_fire = 0;
;;;4      void TIM6_Configure(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;5      {
;;;6          TIM_TimeBaseInitTypeDef  tim;
;;;7          NVIC_InitTypeDef         nvic;
;;;8      
;;;9          RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM6,ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;10         
;;;11         nvic.NVIC_IRQChannel = TIM6_DAC_IRQn;
00000a  2036              MOVS     r0,#0x36
00000c  f88d0000          STRB     r0,[sp,#0]
;;;12         nvic.NVIC_IRQChannelPreemptionPriority = 1;
000010  2001              MOVS     r0,#1
000012  f88d0001          STRB     r0,[sp,#1]
;;;13         nvic.NVIC_IRQChannelSubPriority = 0;
000016  2000              MOVS     r0,#0
000018  f88d0002          STRB     r0,[sp,#2]
;;;14         nvic.NVIC_IRQChannelCmd = ENABLE;
00001c  2001              MOVS     r0,#1
00001e  f88d0003          STRB     r0,[sp,#3]
;;;15         NVIC_Init(&nvic);
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       NVIC_Init
;;;16         tim.TIM_Prescaler = 90-1;        //84M internal clock
000028  2059              MOVS     r0,#0x59
00002a  f8ad0004          STRH     r0,[sp,#4]
;;;17         tim.TIM_CounterMode = TIM_CounterMode_Up;
00002e  2000              MOVS     r0,#0
000030  f8ad0006          STRH     r0,[sp,#6]
;;;18         tim.TIM_ClockDivision = TIM_CKD_DIV1;
000034  f8ad000c          STRH     r0,[sp,#0xc]
;;;19         tim.TIM_Period = 1000;  //1ms,1000Hz
000038  f44f707a          MOV      r0,#0x3e8
00003c  9002              STR      r0,[sp,#8]
;;;20         TIM_TimeBaseInit(TIM6,&tim);
00003e  a901              ADD      r1,sp,#4
000040  4801              LDR      r0,|L1.72|
000042  f7fffffe          BL       TIM_TimeBaseInit
;;;21     }
000046  bd1f              POP      {r0-r4,pc}
;;;22     
                          ENDP

                  |L1.72|
                          DCD      0x40001000

                          AREA ||i.TIM6_DAC_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM6_DAC_IRQHandler PROC
;;;35     
;;;36     void TIM6_DAC_IRQHandler(void)  
000000  b510              PUSH     {r4,lr}
;;;37     {
;;;38         if (TIM_GetITStatus(TIM6,TIM_IT_Update)!= RESET) 
000002  2101              MOVS     r1,#1
000004  4811              LDR      r0,|L2.76|
000006  f7fffffe          BL       TIM_GetITStatus
00000a  b1f0              CBZ      r0,|L2.74|
;;;39     	{
;;;40     		TIM_ClearITPendingBit(TIM6,TIM_IT_Update);
00000c  2101              MOVS     r1,#1
00000e  480f              LDR      r0,|L2.76|
000010  f7fffffe          BL       TIM_ClearITPendingBit
;;;41     		TIM_ClearFlag(TIM6, TIM_FLAG_Update);
000014  2101              MOVS     r1,#1
000016  480d              LDR      r0,|L2.76|
000018  f7fffffe          BL       TIM_ClearFlag
;;;42     	
;;;43     		INSTask();//MPU×ËÌ¬½âËã
00001c  f7fffffe          BL       INSTask
;;;44     		
;;;45     		time_ms_fire++;
000020  480b              LDR      r0,|L2.80|
000022  7800              LDRB     r0,[r0,#0]  ; time_ms_fire
000024  1c40              ADDS     r0,r0,#1
000026  490a              LDR      r1,|L2.80|
000028  7008              STRB     r0,[r1,#0]
;;;46     		if(time_ms_fire > 5)
00002a  4608              MOV      r0,r1
00002c  7800              LDRB     r0,[r0,#0]  ; time_ms_fire
00002e  2805              CMP      r0,#5
000030  dd09              BLE      |L2.70|
;;;47     		{
;;;48     			time_ms_fire = 0;
000032  2000              MOVS     r0,#0
000034  7008              STRB     r0,[r1,#0]
;;;49     			getEnconderData_fire(&fire_enconderL, 'L');
000036  214c              MOVS     r1,#0x4c
000038  4806              LDR      r0,|L2.84|
00003a  f7fffffe          BL       getEnconderData_fire
;;;50     			getEnconderData_fire(&fire_enconderR, 'R');//Ä¦²ÁÂÖ±àÂëÆ÷
00003e  2152              MOVS     r1,#0x52
000040  4805              LDR      r0,|L2.88|
000042  f7fffffe          BL       getEnconderData_fire
                  |L2.70|
;;;51     		}
;;;52     		
;;;53     		control_task();         //µ×ÅÌ¡¢ÔÆÌ¨¿ØÖÆÈÎÎñ
000046  f7fffffe          BL       control_task
                  |L2.74|
;;;54        }
;;;55     }
00004a  bd10              POP      {r4,pc}
;;;56     
                          ENDP

                  |L2.76|
                          DCD      0x40001000
                  |L2.80|
                          DCD      time_ms_fire
                  |L2.84|
                          DCD      fire_enconderL
                  |L2.88|
                          DCD      fire_enconderR

                          AREA ||i.TIM6_Start||, CODE, READONLY, ALIGN=2

                  TIM6_Start PROC
;;;22     
;;;23     void TIM6_Start(void)
000000  b510              PUSH     {r4,lr}
;;;24     {
;;;25         TIM_Cmd(TIM6, ENABLE);	 
000002  2101              MOVS     r1,#1
000004  4806              LDR      r0,|L3.32|
000006  f7fffffe          BL       TIM_Cmd
;;;26         TIM_ITConfig(TIM6, TIM_IT_Update,ENABLE);
00000a  2201              MOVS     r2,#1
00000c  4611              MOV      r1,r2
00000e  4804              LDR      r0,|L3.32|
000010  f7fffffe          BL       TIM_ITConfig
;;;27         TIM_ClearFlag(TIM6, TIM_FLAG_Update);	
000014  2101              MOVS     r1,#1
000016  4802              LDR      r0,|L3.32|
000018  f7fffffe          BL       TIM_ClearFlag
;;;28     }
00001c  bd10              POP      {r4,pc}
;;;29     void TIM6_Stop(void)
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      0x40001000

                          AREA ||i.TIM6_Stop||, CODE, READONLY, ALIGN=2

                  TIM6_Stop PROC
;;;28     }
;;;29     void TIM6_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;30     {
;;;31         TIM_Cmd(TIM6, DISABLE);	 
000002  2100              MOVS     r1,#0
000004  4804              LDR      r0,|L4.24|
000006  f7fffffe          BL       TIM_Cmd
;;;32         TIM_ITConfig(TIM6, TIM_IT_Update,DISABLE);
00000a  2200              MOVS     r2,#0
00000c  2101              MOVS     r1,#1
00000e  4802              LDR      r0,|L4.24|
000010  f7fffffe          BL       TIM_ITConfig
;;;33     }
000014  bd10              POP      {r4,pc}
;;;34     
                          ENDP

000016  0000              DCW      0x0000
                  |L4.24|
                          DCD      0x40001000

                          AREA ||.data||, DATA, ALIGN=0

                  time_ms_fire
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\BSP\\timer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_6de5a29b____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___7_timer_c_6de5a29b____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_6de5a29b____REVSH|
#line 153
|__asm___7_timer_c_6de5a29b____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_6de5a29b____RRX|
#line 328
|__asm___7_timer_c_6de5a29b____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
