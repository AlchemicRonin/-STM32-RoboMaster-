; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\buzzer.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\buzzer.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-步兵3.8（二段加速)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\buzzer.crf ..\BSP\buzzer.c]
                          THUMB

                          AREA ||i.buzzer_init||, CODE, READONLY, ALIGN=2

                  buzzer_init PROC
;;;4      
;;;5      void buzzer_init(uint16_t arr, uint16_t psc)
000000  b530              PUSH     {r4,r5,lr}
;;;6      {
000002  b08b              SUB      sp,sp,#0x2c
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;7          GPIO_InitTypeDef GPIO_InitStructure;
;;;8          TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;9          TIM_OCInitTypeDef TIM_OCInitStructure;
;;;10     
;;;11         RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM12, ENABLE);
000008  2101              MOVS     r1,#1
00000a  2040              MOVS     r0,#0x40
00000c  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;12         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOH, ENABLE);
000010  2101              MOVS     r1,#1
000012  2080              MOVS     r0,#0x80
000014  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;13     
;;;14         RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
000018  2101              MOVS     r1,#1
00001a  2040              MOVS     r0,#0x40
00001c  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;15         RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);
000020  2100              MOVS     r1,#0
000022  2040              MOVS     r0,#0x40
000024  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;16     
;;;17         GPIO_PinAFConfig(GPIOH, GPIO_PinSource6, GPIO_AF_TIM12);
000028  2209              MOVS     r2,#9
00002a  2106              MOVS     r1,#6
00002c  4820              LDR      r0,|L1.176|
00002e  f7fffffe          BL       GPIO_PinAFConfig
;;;18     
;;;19         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
000032  2040              MOVS     r0,#0x40
000034  9009              STR      r0,[sp,#0x24]
;;;20         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000036  2002              MOVS     r0,#2
000038  f88d0028          STRB     r0,[sp,#0x28]
;;;21         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
00003c  2003              MOVS     r0,#3
00003e  f88d0029          STRB     r0,[sp,#0x29]
;;;22         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000042  2000              MOVS     r0,#0
000044  f88d002a          STRB     r0,[sp,#0x2a]
;;;23         GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
000048  2002              MOVS     r0,#2
00004a  f88d002b          STRB     r0,[sp,#0x2b]
;;;24         GPIO_Init(GPIOH, &GPIO_InitStructure);
00004e  a909              ADD      r1,sp,#0x24
000050  4817              LDR      r0,|L1.176|
000052  f7fffffe          BL       GPIO_Init
;;;25     
;;;26         TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
000056  2060              MOVS     r0,#0x60
000058  f8ad0004          STRH     r0,[sp,#4]
;;;27         TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
00005c  2001              MOVS     r0,#1
00005e  f8ad0006          STRH     r0,[sp,#6]
;;;28         TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
000062  2000              MOVS     r0,#0
000064  f8ad0010          STRH     r0,[sp,#0x10]
;;;29         TIM_OC1Init(TIM12, &TIM_OCInitStructure);
000068  a901              ADD      r1,sp,#4
00006a  4812              LDR      r0,|L1.180|
00006c  f7fffffe          BL       TIM_OC1Init
;;;30     
;;;31         TIM_OC1PreloadConfig(TIM12, TIM_OCPreload_Enable);
000070  2108              MOVS     r1,#8
000072  4810              LDR      r0,|L1.180|
000074  f7fffffe          BL       TIM_OC1PreloadConfig
;;;32     
;;;33         TIM_ARRPreloadConfig(TIM12, ENABLE);
000078  2101              MOVS     r1,#1
00007a  480e              LDR      r0,|L1.180|
00007c  f7fffffe          BL       TIM_ARRPreloadConfig
;;;34     
;;;35         TIM_TimeBaseInitStructure.TIM_Period = arr - 1;
000080  1e68              SUBS     r0,r5,#1
000082  9007              STR      r0,[sp,#0x1c]
;;;36         TIM_TimeBaseInitStructure.TIM_Prescaler = psc - 1;
000084  1e60              SUBS     r0,r4,#1
000086  b280              UXTH     r0,r0
000088  f8ad0018          STRH     r0,[sp,#0x18]
;;;37         TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;
00008c  2000              MOVS     r0,#0
00008e  f8ad001a          STRH     r0,[sp,#0x1a]
;;;38         TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;
000092  f8ad0020          STRH     r0,[sp,#0x20]
;;;39     
;;;40         TIM_TimeBaseInit(TIM12, &TIM_TimeBaseInitStructure);
000096  a906              ADD      r1,sp,#0x18
000098  4806              LDR      r0,|L1.180|
00009a  f7fffffe          BL       TIM_TimeBaseInit
;;;41         TIM_Cmd(TIM12, ENABLE);
00009e  2101              MOVS     r1,#1
0000a0  4804              LDR      r0,|L1.180|
0000a2  f7fffffe          BL       TIM_Cmd
;;;42     
;;;43         buzzer_off();
0000a6  f7fffffe          BL       buzzer_off
;;;44     }
0000aa  b00b              ADD      sp,sp,#0x2c
0000ac  bd30              POP      {r4,r5,pc}
;;;45     
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      0x40021c00
                  |L1.180|
                          DCD      0x40001800

                          AREA ||i.buzzer_off||, CODE, READONLY, ALIGN=2

                  buzzer_off PROC
;;;50     }
;;;51     void buzzer_off(void)
000000  b510              PUSH     {r4,lr}
;;;52     {
;;;53         TIM_SetCompare1(TIM12, 0);
000002  2100              MOVS     r1,#0
000004  4801              LDR      r0,|L2.12|
000006  f7fffffe          BL       TIM_SetCompare1
;;;54     }
00000a  bd10              POP      {r4,pc}
                          ENDP

                  |L2.12|
                          DCD      0x40001800

                          AREA ||i.buzzer_on||, CODE, READONLY, ALIGN=2

                  buzzer_on PROC
;;;45     
;;;46     void buzzer_on(void)
000000  b510              PUSH     {r4,lr}
;;;47     {
;;;48         TIM12->PSC = 95;
000002  205f              MOVS     r0,#0x5f
000004  4904              LDR      r1,|L3.24|
000006  8008              STRH     r0,[r1,#0]
;;;49         TIM_SetCompare1(TIM12, 10000);
000008  f2427110          MOV      r1,#0x2710
00000c  4802              LDR      r0,|L3.24|
00000e  3828              SUBS     r0,r0,#0x28
000010  f7fffffe          BL       TIM_SetCompare1
;;;50     }
000014  bd10              POP      {r4,pc}
;;;51     void buzzer_off(void)
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      0x40001828

;*** Start embedded assembler ***

#line 1 "..\\BSP\\buzzer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_buzzer_c_e955b820____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___8_buzzer_c_e955b820____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_buzzer_c_e955b820____REVSH|
#line 153
|__asm___8_buzzer_c_e955b820____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_buzzer_c_e955b820____RRX|
#line 328
|__asm___8_buzzer_c_e955b820____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
