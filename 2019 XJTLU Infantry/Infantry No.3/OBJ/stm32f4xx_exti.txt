; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\stm32f4xx_exti.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\stm32f4xx_exti.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-步兵3.8（二段加速)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\stm32f4xx_exti.crf ..\FWLIB\src\stm32f4xx_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;249      */
;;;250    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;251    {
;;;252      /* Check the parameters */
;;;253      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;254      
;;;255      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;256    }
000004  4770              BX       lr
;;;257    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;287      */
;;;288    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;289    {
;;;290      /* Check the parameters */
;;;291      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;292      
;;;293      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;294    }
000004  4770              BX       lr
;;;295    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;109      */
;;;110    void EXTI_DeInit(void)
000000  2000              MOVS     r0,#0
;;;111    {
;;;112      EXTI->IMR = 0x00000000;
000002  4906              LDR      r1,|L3.28|
000004  6008              STR      r0,[r1,#0]
;;;113      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;114      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;115      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;116      EXTI->PR = 0x007FFFFF;
000012  4803              LDR      r0,|L3.32|
000014  4901              LDR      r1,|L3.28|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;117    }
00001a  4770              BX       lr
;;;118    
                          ENDP

                  |L3.28|
                          DCD      0x40013c00
                  |L3.32|
                          DCD      0x007fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;196      */
;;;197    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;198    {
;;;199      /* Check the parameters */
;;;200      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;201      
;;;202      EXTI->SWIER |= EXTI_Line;
000002  6809              LDR      r1,[r1,#0]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L4.12|
000008  6011              STR      r1,[r2,#0]
;;;203    }
00000a  4770              BX       lr
;;;204    
                          ENDP

                  |L4.12|
                          DCD      0x40013c10

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;226      */
;;;227    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;228    {
;;;229      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;230      /* Check the parameters */
;;;231      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;232      
;;;233      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L5.20|
000006  6812              LDR      r2,[r2,#0]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L5.16|
;;;234      {
;;;235        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L5.18|
                  |L5.16|
;;;236      }
;;;237      else
;;;238      {
;;;239        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L5.18|
;;;240      }
;;;241      return bitstatus;
;;;242    }
000012  4770              BX       lr
;;;243    
                          ENDP

                  |L5.20|
                          DCD      0x40013c14

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;263      */
;;;264    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;265    {
;;;266      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;267      /* Check the parameters */
;;;268      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;269      
;;;270      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L6.20|
000006  6812              LDR      r2,[r2,#0]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L6.16|
;;;271      {
;;;272        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L6.18|
                  |L6.16|
;;;273      }
;;;274      else
;;;275      {
;;;276        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L6.18|
;;;277      }
;;;278      return bitstatus;
;;;279      
;;;280    }
000012  4770              BX       lr
;;;281    
                          ENDP

                  |L6.20|
                          DCD      0x40013c14

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;125      */
;;;126    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;127    {
;;;128      uint32_t tmp = 0;
;;;129    
;;;130      /* Check the parameters */
;;;131      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;132      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;133      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;134      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;135    
;;;136      tmp = (uint32_t)EXTI_BASE;
000002  4923              LDR      r1,|L7.144|
;;;137         
;;;138      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7982              LDRB     r2,[r0,#6]
000006  2a00              CMP      r2,#0
000008  d03a              BEQ      |L7.128|
;;;139      {
;;;140        /* Clear EXTI line configuration */
;;;141        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  460a              MOV      r2,r1
00000c  6812              LDR      r2,[r2,#0]
00000e  6803              LDR      r3,[r0,#0]
000010  439a              BICS     r2,r2,r3
000012  460b              MOV      r3,r1
000014  601a              STR      r2,[r3,#0]
;;;142        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000016  1d0a              ADDS     r2,r1,#4
000018  6812              LDR      r2,[r2,#0]
00001a  6803              LDR      r3,[r0,#0]
00001c  439a              BICS     r2,r2,r3
00001e  1d0b              ADDS     r3,r1,#4
000020  601a              STR      r2,[r3,#0]
;;;143        
;;;144        tmp += EXTI_InitStruct->EXTI_Mode;
000022  7902              LDRB     r2,[r0,#4]
000024  4411              ADD      r1,r1,r2
;;;145    
;;;146        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000026  680a              LDR      r2,[r1,#0]
000028  6803              LDR      r3,[r0,#0]
00002a  431a              ORRS     r2,r2,r3
00002c  600a              STR      r2,[r1,#0]
;;;147    
;;;148        /* Clear Rising Falling edge configuration */
;;;149        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
00002e  4a18              LDR      r2,|L7.144|
000030  3208              ADDS     r2,r2,#8
000032  6812              LDR      r2,[r2,#0]
000034  6803              LDR      r3,[r0,#0]
000036  439a              BICS     r2,r2,r3
000038  4b15              LDR      r3,|L7.144|
00003a  3308              ADDS     r3,r3,#8
00003c  601a              STR      r2,[r3,#0]
;;;150        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00003e  1d1a              ADDS     r2,r3,#4
000040  6812              LDR      r2,[r2,#0]
000042  6803              LDR      r3,[r0,#0]
000044  439a              BICS     r2,r2,r3
000046  4b12              LDR      r3,|L7.144|
000048  330c              ADDS     r3,r3,#0xc
00004a  601a              STR      r2,[r3,#0]
;;;151        
;;;152        /* Select the trigger for the selected external interrupts */
;;;153        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00004c  7942              LDRB     r2,[r0,#5]
00004e  2a10              CMP      r2,#0x10
000050  d10e              BNE      |L7.112|
;;;154        {
;;;155          /* Rising Falling edge */
;;;156          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
000052  1f1a              SUBS     r2,r3,#4
000054  6812              LDR      r2,[r2,#0]
000056  6803              LDR      r3,[r0,#0]
000058  431a              ORRS     r2,r2,r3
00005a  4b0d              LDR      r3,|L7.144|
00005c  3308              ADDS     r3,r3,#8
00005e  601a              STR      r2,[r3,#0]
;;;157          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
000060  1d1a              ADDS     r2,r3,#4
000062  6812              LDR      r2,[r2,#0]
000064  6803              LDR      r3,[r0,#0]
000066  431a              ORRS     r2,r2,r3
000068  4b09              LDR      r3,|L7.144|
00006a  330c              ADDS     r3,r3,#0xc
00006c  601a              STR      r2,[r3,#0]
00006e  e00d              B        |L7.140|
                  |L7.112|
;;;158        }
;;;159        else
;;;160        {
;;;161          tmp = (uint32_t)EXTI_BASE;
000070  4907              LDR      r1,|L7.144|
;;;162          tmp += EXTI_InitStruct->EXTI_Trigger;
000072  7942              LDRB     r2,[r0,#5]
000074  4411              ADD      r1,r1,r2
;;;163    
;;;164          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000076  680a              LDR      r2,[r1,#0]
000078  6803              LDR      r3,[r0,#0]
00007a  431a              ORRS     r2,r2,r3
00007c  600a              STR      r2,[r1,#0]
00007e  e005              B        |L7.140|
                  |L7.128|
;;;165        }
;;;166      }
;;;167      else
;;;168      {
;;;169        tmp += EXTI_InitStruct->EXTI_Mode;
000080  7902              LDRB     r2,[r0,#4]
000082  4411              ADD      r1,r1,r2
;;;170    
;;;171        /* Disable the selected external lines */
;;;172        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
000084  680a              LDR      r2,[r1,#0]
000086  6803              LDR      r3,[r0,#0]
000088  439a              BICS     r2,r2,r3
00008a  600a              STR      r2,[r1,#0]
                  |L7.140|
;;;173      }
;;;174    }
00008c  4770              BX       lr
;;;175    
                          ENDP

00008e  0000              DCW      0x0000
                  |L7.144|
                          DCD      0x40013c00

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;181      */
;;;182    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;183    {
;;;184      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
000002  6001              STR      r1,[r0,#0]
;;;185      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000004  7101              STRB     r1,[r0,#4]
;;;186      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  210c              MOVS     r1,#0xc
000008  7141              STRB     r1,[r0,#5]
;;;187      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  2100              MOVS     r1,#0
00000c  7181              STRB     r1,[r0,#6]
;;;188    }
00000e  4770              BX       lr
;;;189    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\FWLIB\\src\\stm32f4xx_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 153
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____RRX|
#line 328
|__asm___16_stm32f4xx_exti_c_28b3b60e____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
