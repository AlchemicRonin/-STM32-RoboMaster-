; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\pwm.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\pwm.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-步兵3.8（二段加速)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\pwm.crf ..\BSP\pwm.c]
                          THUMB

                          AREA ||i.TIM1_FireMotor_Configure||, CODE, READONLY, ALIGN=2

                  TIM1_FireMotor_Configure PROC
;;;3      
;;;4      void TIM1_FireMotor_Configure()
000000  b500              PUSH     {lr}
;;;5      {
000002  b08b              SUB      sp,sp,#0x2c
;;;6          GPIO_InitTypeDef GPIO_InitStructure;
;;;7          TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;8          TIM_OCInitTypeDef TIM_OCInitStructure;
;;;9      
;;;10         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
000004  2101              MOVS     r1,#1
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;11         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOE, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  2010              MOVS     r0,#0x10
000010  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;12     
;;;13         RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);
000014  2101              MOVS     r1,#1
000016  4608              MOV      r0,r1
000018  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;14     
;;;15         GPIO_PinAFConfig(GPIOA, GPIO_PinSource8, GPIO_AF_TIM1);
00001c  2201              MOVS     r2,#1
00001e  2108              MOVS     r1,#8
000020  4838              LDR      r0,|L1.260|
000022  f7fffffe          BL       GPIO_PinAFConfig
;;;16         GPIO_PinAFConfig(GPIOE, GPIO_PinSource14, GPIO_AF_TIM1);
000026  2201              MOVS     r2,#1
000028  210e              MOVS     r1,#0xe
00002a  4837              LDR      r0,|L1.264|
00002c  f7fffffe          BL       GPIO_PinAFConfig
;;;17     
;;;18         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
000030  f44f7080          MOV      r0,#0x100
000034  9009              STR      r0,[sp,#0x24]
;;;19         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000036  2002              MOVS     r0,#2
000038  f88d0028          STRB     r0,[sp,#0x28]
;;;20         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
00003c  2000              MOVS     r0,#0
00003e  f88d0029          STRB     r0,[sp,#0x29]
;;;21         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000042  f88d002a          STRB     r0,[sp,#0x2a]
;;;22         GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000046  f88d002b          STRB     r0,[sp,#0x2b]
;;;23         GPIO_Init(GPIOA, &GPIO_InitStructure);
00004a  a909              ADD      r1,sp,#0x24
00004c  482d              LDR      r0,|L1.260|
00004e  f7fffffe          BL       GPIO_Init
;;;24     
;;;25         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_14;
000052  f44f4080          MOV      r0,#0x4000
000056  9009              STR      r0,[sp,#0x24]
;;;26         GPIO_Init(GPIOE, &GPIO_InitStructure);
000058  a909              ADD      r1,sp,#0x24
00005a  482b              LDR      r0,|L1.264|
00005c  f7fffffe          BL       GPIO_Init
;;;27     
;;;28         RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
000060  2101              MOVS     r1,#1
000062  4608              MOV      r0,r1
000064  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;29         RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);
000068  2100              MOVS     r1,#0
00006a  2001              MOVS     r0,#1
00006c  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;30     
;;;31         TIM_TimeBaseInitStructure.TIM_Period = 2000 - 1;
000070  f24070cf          MOV      r0,#0x7cf
000074  9007              STR      r0,[sp,#0x1c]
;;;32         TIM_TimeBaseInitStructure.TIM_Prescaler = 180 - 1;
000076  20b3              MOVS     r0,#0xb3
000078  f8ad0018          STRH     r0,[sp,#0x18]
;;;33         TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;
00007c  2000              MOVS     r0,#0
00007e  f8ad001a          STRH     r0,[sp,#0x1a]
;;;34     
;;;35         TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;
000082  f8ad0020          STRH     r0,[sp,#0x20]
;;;36     
;;;37         TIM_TimeBaseInit(TIM1, &TIM_TimeBaseInitStructure);
000086  a906              ADD      r1,sp,#0x18
000088  4820              LDR      r0,|L1.268|
00008a  f7fffffe          BL       TIM_TimeBaseInit
;;;38     
;;;39         TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
00008e  2060              MOVS     r0,#0x60
000090  f8ad0004          STRH     r0,[sp,#4]
;;;40         TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
000094  2001              MOVS     r0,#1
000096  f8ad0006          STRH     r0,[sp,#6]
;;;41         TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
00009a  2000              MOVS     r0,#0
00009c  f8ad0010          STRH     r0,[sp,#0x10]
;;;42         TIM_OCInitStructure.TIM_OutputNState = TIM_OutputNState_Disable;
0000a0  f8ad0008          STRH     r0,[sp,#8]
;;;43         TIM_OCInitStructure.TIM_OCNPolarity = TIM_OCNPolarity_Low;
0000a4  2008              MOVS     r0,#8
0000a6  f8ad0012          STRH     r0,[sp,#0x12]
;;;44         TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Set;
0000aa  0140              LSLS     r0,r0,#5
0000ac  f8ad0014          STRH     r0,[sp,#0x14]
;;;45         TIM_OCInitStructure.TIM_OCNIdleState = TIM_OCIdleState_Reset;
0000b0  2000              MOVS     r0,#0
0000b2  f8ad0016          STRH     r0,[sp,#0x16]
;;;46         TIM_OCInitStructure.TIM_Pulse = 1000;
0000b6  f44f707a          MOV      r0,#0x3e8
0000ba  9003              STR      r0,[sp,#0xc]
;;;47     
;;;48         TIM_OC1Init(TIM1, &TIM_OCInitStructure);
0000bc  a901              ADD      r1,sp,#4
0000be  4813              LDR      r0,|L1.268|
0000c0  f7fffffe          BL       TIM_OC1Init
;;;49         TIM_OC4Init(TIM1, &TIM_OCInitStructure);
0000c4  a901              ADD      r1,sp,#4
0000c6  4811              LDR      r0,|L1.268|
0000c8  f7fffffe          BL       TIM_OC4Init
;;;50     
;;;51         TIM_OC1PreloadConfig(TIM1, TIM_OCPreload_Enable);
0000cc  2108              MOVS     r1,#8
0000ce  480f              LDR      r0,|L1.268|
0000d0  f7fffffe          BL       TIM_OC1PreloadConfig
;;;52         TIM_OC4PreloadConfig(TIM1, TIM_OCPreload_Enable);
0000d4  2108              MOVS     r1,#8
0000d6  480d              LDR      r0,|L1.268|
0000d8  f7fffffe          BL       TIM_OC4PreloadConfig
;;;53     
;;;54         TIM_ARRPreloadConfig(TIM1, ENABLE);
0000dc  2101              MOVS     r1,#1
0000de  480b              LDR      r0,|L1.268|
0000e0  f7fffffe          BL       TIM_ARRPreloadConfig
;;;55     
;;;56         TIM_CtrlPWMOutputs(TIM1, ENABLE);
0000e4  2101              MOVS     r1,#1
0000e6  4809              LDR      r0,|L1.268|
0000e8  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;57     
;;;58         TIM_Cmd(TIM1, ENABLE);
0000ec  2101              MOVS     r1,#1
0000ee  4807              LDR      r0,|L1.268|
0000f0  f7fffffe          BL       TIM_Cmd
;;;59     	
;;;60     	TIM1->CCR1=1450;
0000f4  f24050aa          MOV      r0,#0x5aa
0000f8  4904              LDR      r1,|L1.268|
0000fa  6348              STR      r0,[r1,#0x34]
;;;61     	TIM1->CCR4=1450;
0000fc  6408              STR      r0,[r1,#0x40]
;;;62     }
0000fe  b00b              ADD      sp,sp,#0x2c
000100  bd00              POP      {pc}
;;;63     
                          ENDP

000102  0000              DCW      0x0000
                  |L1.260|
                          DCD      0x40020000
                  |L1.264|
                          DCD      0x40021000
                  |L1.268|
                          DCD      0x40010000

                          AREA ||i.TIM3_Init||, CODE, READONLY, ALIGN=2

                  TIM3_Init PROC
;;;64     //TIM3 陀螺仪温度pwm
;;;65     void TIM3_Init(uint16_t arr, uint16_t psc)
000000  b530              PUSH     {r4,r5,lr}
;;;66     {
000002  b08b              SUB      sp,sp,#0x2c
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;67         GPIO_InitTypeDef GPIO_InitStructure;
;;;68         TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;69         TIM_OCInitTypeDef TIM_OCInitStructure;
;;;70     
;;;71         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
000008  2101              MOVS     r1,#1
00000a  2002              MOVS     r0,#2
00000c  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;72     
;;;73         RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
000010  2101              MOVS     r1,#1
000012  2002              MOVS     r0,#2
000014  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;74     
;;;75         GPIO_PinAFConfig(GPIOB, GPIO_PinSource5, GPIO_AF_TIM3);
000018  2202              MOVS     r2,#2
00001a  2105              MOVS     r1,#5
00001c  482b              LDR      r0,|L2.204|
00001e  f7fffffe          BL       GPIO_PinAFConfig
;;;76     
;;;77         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
000022  2020              MOVS     r0,#0x20
000024  9009              STR      r0,[sp,#0x24]
;;;78         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000026  2002              MOVS     r0,#2
000028  f88d0028          STRB     r0,[sp,#0x28]
;;;79         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
00002c  2000              MOVS     r0,#0
00002e  f88d0029          STRB     r0,[sp,#0x29]
;;;80         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000032  f88d002a          STRB     r0,[sp,#0x2a]
;;;81         GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000036  f88d002b          STRB     r0,[sp,#0x2b]
;;;82         GPIO_Init(GPIOB, &GPIO_InitStructure);
00003a  a909              ADD      r1,sp,#0x24
00003c  4823              LDR      r0,|L2.204|
00003e  f7fffffe          BL       GPIO_Init
;;;83     
;;;84         RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
000042  2101              MOVS     r1,#1
000044  2002              MOVS     r0,#2
000046  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;85         RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
00004a  2100              MOVS     r1,#0
00004c  2002              MOVS     r0,#2
00004e  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;86     
;;;87         TIM_TimeBaseInitStructure.TIM_Period = arr - 1;
000052  1e68              SUBS     r0,r5,#1
000054  9007              STR      r0,[sp,#0x1c]
;;;88         TIM_TimeBaseInitStructure.TIM_Prescaler = psc - 1;
000056  1e60              SUBS     r0,r4,#1
000058  b280              UXTH     r0,r0
00005a  f8ad0018          STRH     r0,[sp,#0x18]
;;;89         TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;
00005e  2000              MOVS     r0,#0
000060  f8ad001a          STRH     r0,[sp,#0x1a]
;;;90     
;;;91         TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;
000064  f8ad0020          STRH     r0,[sp,#0x20]
;;;92     
;;;93         TIM_TimeBaseInit(TIM3, &TIM_TimeBaseInitStructure);
000068  a906              ADD      r1,sp,#0x18
00006a  4819              LDR      r0,|L2.208|
00006c  f7fffffe          BL       TIM_TimeBaseInit
;;;94     
;;;95         TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
000070  2060              MOVS     r0,#0x60
000072  f8ad0004          STRH     r0,[sp,#4]
;;;96         TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
000076  2001              MOVS     r0,#1
000078  f8ad0006          STRH     r0,[sp,#6]
;;;97         TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
00007c  2000              MOVS     r0,#0
00007e  f8ad0010          STRH     r0,[sp,#0x10]
;;;98         TIM_OCInitStructure.TIM_OutputNState = TIM_OutputNState_Disable;
000082  f8ad0008          STRH     r0,[sp,#8]
;;;99         TIM_OCInitStructure.TIM_OCNPolarity = TIM_OCNPolarity_Low;
000086  2008              MOVS     r0,#8
000088  f8ad0012          STRH     r0,[sp,#0x12]
;;;100        TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Set;
00008c  0140              LSLS     r0,r0,#5
00008e  f8ad0014          STRH     r0,[sp,#0x14]
;;;101        TIM_OCInitStructure.TIM_OCNIdleState = TIM_OCIdleState_Reset;
000092  2000              MOVS     r0,#0
000094  f8ad0016          STRH     r0,[sp,#0x16]
;;;102        TIM_OCInitStructure.TIM_Pulse = 1000;
000098  f44f707a          MOV      r0,#0x3e8
00009c  9003              STR      r0,[sp,#0xc]
;;;103    
;;;104        TIM_OC2Init(TIM3, &TIM_OCInitStructure);
00009e  a901              ADD      r1,sp,#4
0000a0  480b              LDR      r0,|L2.208|
0000a2  f7fffffe          BL       TIM_OC2Init
;;;105    
;;;106        TIM_OC2PreloadConfig(TIM3, TIM_OCPreload_Enable);
0000a6  2108              MOVS     r1,#8
0000a8  4809              LDR      r0,|L2.208|
0000aa  f7fffffe          BL       TIM_OC2PreloadConfig
;;;107    
;;;108        TIM_ARRPreloadConfig(TIM3, ENABLE);
0000ae  2101              MOVS     r1,#1
0000b0  4807              LDR      r0,|L2.208|
0000b2  f7fffffe          BL       TIM_ARRPreloadConfig
;;;109    
;;;110        TIM_CtrlPWMOutputs(TIM3, ENABLE);
0000b6  2101              MOVS     r1,#1
0000b8  4805              LDR      r0,|L2.208|
0000ba  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;111    
;;;112        TIM_Cmd(TIM3, ENABLE);
0000be  2101              MOVS     r1,#1
0000c0  4803              LDR      r0,|L2.208|
0000c2  f7fffffe          BL       TIM_Cmd
;;;113    }
0000c6  b00b              ADD      sp,sp,#0x2c
0000c8  bd30              POP      {r4,r5,pc}
;;;114    
                          ENDP

0000ca  0000              DCW      0x0000
                  |L2.204|
                          DCD      0x40020400
                  |L2.208|
                          DCD      0x40000400

                          AREA ||i.heat_output||, CODE, READONLY, ALIGN=2

                  heat_output PROC
;;;115    
;;;116    void heat_output(uint16_t pwm)
000000  4901              LDR      r1,|L3.8|
;;;117    {
;;;118    	TIM3->CCR2  = pwm;
000002  6008              STR      r0,[r1,#0]
;;;119    }
000004  4770              BX       lr
;;;120    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x40000438

;*** Start embedded assembler ***

#line 1 "..\\BSP\\pwm.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_pwm_c_6a812caf____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___5_pwm_c_6a812caf____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_pwm_c_6a812caf____REVSH|
#line 153
|__asm___5_pwm_c_6a812caf____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_pwm_c_6a812caf____RRX|
#line 328
|__asm___5_pwm_c_6a812caf____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
