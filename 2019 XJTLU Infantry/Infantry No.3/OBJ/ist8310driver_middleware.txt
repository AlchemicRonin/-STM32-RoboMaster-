; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\ist8310driver_middleware.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\ist8310driver_middleware.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-步兵3.8（二段加速)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\ist8310driver_middleware.crf ..\AHRS\ist8310driver_middleware.c]
                          THUMB

                          AREA ||i.ist8310_GPIO_init||, CODE, READONLY, ALIGN=2

                  ist8310_GPIO_init PROC
;;;20     
;;;21     void ist8310_GPIO_init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;22     {
;;;23         GPIO_InitTypeDef GPIO_InitStructure;
;;;24     
;;;25         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOE, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;26         //IST RESET
;;;27         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
00000a  2004              MOVS     r0,#4
00000c  9000              STR      r0,[sp,#0]
;;;28         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00000e  2001              MOVS     r0,#1
000010  f88d0004          STRB     r0,[sp,#4]
;;;29         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000014  2000              MOVS     r0,#0
000016  f88d0006          STRB     r0,[sp,#6]
;;;30         GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
00001a  2001              MOVS     r0,#1
00001c  f88d0007          STRB     r0,[sp,#7]
;;;31         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000020  2003              MOVS     r0,#3
000022  f88d0005          STRB     r0,[sp,#5]
;;;32         GPIO_Init(GPIOE, &GPIO_InitStructure);
000026  4669              MOV      r1,sp
000028  480a              LDR      r0,|L1.84|
00002a  f7fffffe          BL       GPIO_Init
;;;33     
;;;34         //IST INT
;;;35         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
00002e  2008              MOVS     r0,#8
000030  9000              STR      r0,[sp,#0]
;;;36         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
000032  2000              MOVS     r0,#0
000034  f88d0004          STRB     r0,[sp,#4]
;;;37         GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
000038  2001              MOVS     r0,#1
00003a  f88d0006          STRB     r0,[sp,#6]
;;;38         GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
00003e  2000              MOVS     r0,#0
000040  f88d0007          STRB     r0,[sp,#7]
;;;39         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000044  2003              MOVS     r0,#3
000046  f88d0005          STRB     r0,[sp,#5]
;;;40         GPIO_Init(GPIOE, &GPIO_InitStructure);
00004a  4669              MOV      r1,sp
00004c  4801              LDR      r0,|L1.84|
00004e  f7fffffe          BL       GPIO_Init
;;;41     }
000052  bd1c              POP      {r2-r4,pc}
;;;42     
                          ENDP

                  |L1.84|
                          DCD      0x40021000

                          AREA ||i.ist8310_IIC_read_muli_reg||, CODE, READONLY, ALIGN=1

                  ist8310_IIC_read_muli_reg PROC
;;;66     }
;;;67     void ist8310_IIC_read_muli_reg(uint8_t reg, uint8_t *buf, uint8_t len)
000000  b570              PUSH     {r4-r6,lr}
;;;68     {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;69         while (len)
000008  e008              B        |L2.28|
                  |L2.10|
;;;70         {
;;;71             (*buf) = ist8310_IIC_read_single_reg(reg);
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       ist8310_IIC_read_single_reg
000010  7020              STRB     r0,[r4,#0]
;;;72             reg++;
000012  1c70              ADDS     r0,r6,#1
000014  b2c6              UXTB     r6,r0
;;;73             buf++;
000016  1c64              ADDS     r4,r4,#1
;;;74             len--;
000018  1e68              SUBS     r0,r5,#1
00001a  b2c5              UXTB     r5,r0
                  |L2.28|
00001c  2d00              CMP      r5,#0                 ;69
00001e  d1f4              BNE      |L2.10|
;;;75         }
;;;76     }
000020  bd70              POP      {r4-r6,pc}
;;;77     void ist8310_IIC_write_muli_reg(uint8_t reg, uint8_t *data, uint8_t len)
                          ENDP


                          AREA ||i.ist8310_IIC_read_single_reg||, CODE, READONLY, ALIGN=2

                  ist8310_IIC_read_single_reg PROC
;;;52     
;;;53     uint8_t ist8310_IIC_read_single_reg(uint8_t reg)
000000  b538              PUSH     {r3-r5,lr}
;;;54     {
000002  4604              MOV      r4,r0
;;;55         static const uint16_t IIC_time = 2000;
;;;56         uint8_t readBuf[3] = {IST8310_IIC_ADDRESS | IST8310_IIC_READ_MSB, reg, 0x81};
000004  a008              ADR      r0,|L3.40|
000006  6800              LDR      r0,[r0,#0]
000008  9000              STR      r0,[sp,#0]
00000a  f88d4001          STRB     r4,[sp,#1]
;;;57         mpu6500_write_muli_reg(MPU_I2CSLV0_ADDR, readBuf, 3);
00000e  2203              MOVS     r2,#3
000010  4669              MOV      r1,sp
000012  2025              MOVS     r0,#0x25
000014  f7fffffe          BL       mpu6500_write_muli_reg
;;;58         ist8310_delay_us(IIC_time);
000018  f44f60fa          MOV      r0,#0x7d0
00001c  f7fffffe          BL       ist8310_delay_us
;;;59         return mpu6500_read_single_reg(MPU_EXT_SENS_DATA_00);
000020  2049              MOVS     r0,#0x49
000022  f7fffffe          BL       mpu6500_read_single_reg
;;;60     }
000026  bd38              POP      {r3-r5,pc}
;;;61     void ist8310_IIC_write_single_reg(uint8_t reg, uint8_t data)
                          ENDP

                  |L3.40|
000028  8e00              DCB      142,0
00002a  8100              DCB      129,0

                          AREA ||i.ist8310_IIC_write_muli_reg||, CODE, READONLY, ALIGN=1

                  ist8310_IIC_write_muli_reg PROC
;;;76     }
;;;77     void ist8310_IIC_write_muli_reg(uint8_t reg, uint8_t *data, uint8_t len)
000000  b570              PUSH     {r4-r6,lr}
;;;78     {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;79         static const uint16_t IIC_time = 2000;
;;;80         while (len)
000008  e00c              B        |L4.36|
                  |L4.10|
;;;81         {
;;;82             ist8310_IIC_write_single_reg(reg, (*data));
00000a  7821              LDRB     r1,[r4,#0]
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       ist8310_IIC_write_single_reg
;;;83             reg++;
000012  1c70              ADDS     r0,r6,#1
000014  b2c6              UXTB     r6,r0
;;;84             data++;
000016  1c64              ADDS     r4,r4,#1
;;;85             len--;
000018  1e68              SUBS     r0,r5,#1
00001a  b2c5              UXTB     r5,r0
;;;86             ist8310_delay_us(IIC_time);
00001c  f44f60fa          MOV      r0,#0x7d0
000020  f7fffffe          BL       ist8310_delay_us
                  |L4.36|
000024  2d00              CMP      r5,#0                 ;80
000026  d1f0              BNE      |L4.10|
;;;87         }
;;;88     }
000028  bd70              POP      {r4-r6,pc}
;;;89     void ist8310_delay_ms(uint16_t ms)
                          ENDP


                          AREA ||i.ist8310_IIC_write_single_reg||, CODE, READONLY, ALIGN=2

                  ist8310_IIC_write_single_reg PROC
;;;60     }
;;;61     void ist8310_IIC_write_single_reg(uint8_t reg, uint8_t data)
000000  b538              PUSH     {r3-r5,lr}
;;;62     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;63         uint8_t writeBuf[4] = {IST8310_IIC_ADDRESS, reg, data, 0x80};
000006  a006              ADR      r0,|L5.32|
000008  6800              LDR      r0,[r0,#0]
00000a  9000              STR      r0,[sp,#0]
00000c  f88d5001          STRB     r5,[sp,#1]
000010  f88d4002          STRB     r4,[sp,#2]
;;;64     
;;;65         mpu6500_write_muli_reg(MPU_I2CSLV4_ADDR, writeBuf, 4);
000014  2204              MOVS     r2,#4
000016  4669              MOV      r1,sp
000018  2031              MOVS     r0,#0x31
00001a  f7fffffe          BL       mpu6500_write_muli_reg
;;;66     }
00001e  bd38              POP      {r3-r5,pc}
;;;67     void ist8310_IIC_read_muli_reg(uint8_t reg, uint8_t *buf, uint8_t len)
                          ENDP

                  |L5.32|
000020  0e00              DCB      14,0
000022  00                DCB      0
000023  80                DCB      128

                          AREA ||i.ist8310_RST_H||, CODE, READONLY, ALIGN=2

                  ist8310_RST_H PROC
;;;97     
;;;98     void ist8310_RST_H(void)
000000  b510              PUSH     {r4,lr}
;;;99     {
;;;100        GPIO_SetBits(GPIOE, GPIO_Pin_2);
000002  2104              MOVS     r1,#4
000004  4801              LDR      r0,|L6.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;101    }
00000a  bd10              POP      {r4,pc}
;;;102    extern void ist8310_RST_L(void)
                          ENDP

                  |L6.12|
                          DCD      0x40021000

                          AREA ||i.ist8310_RST_L||, CODE, READONLY, ALIGN=2

                  ist8310_RST_L PROC
;;;101    }
;;;102    extern void ist8310_RST_L(void)
000000  b510              PUSH     {r4,lr}
;;;103    {
;;;104        GPIO_ResetBits(GPIOE, GPIO_Pin_2);
000002  2104              MOVS     r1,#4
000004  4801              LDR      r0,|L7.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;105    }
00000a  bd10              POP      {r4,pc}
                          ENDP

                  |L7.12|
                          DCD      0x40021000

                          AREA ||i.ist8310_auto_com_by_mpu6500||, CODE, READONLY, ALIGN=2

                  ist8310_auto_com_by_mpu6500 PROC
;;;46     
;;;47     void ist8310_auto_com_by_mpu6500(void)
000000  b508              PUSH     {r3,lr}
;;;48     {
;;;49         uint8_t readBuf[3] = {IST8310_IIC_ADDRESS | IST8310_IIC_READ_MSB, 0x02, 0x88};
000002  a004              ADR      r0,|L8.20|
000004  6800              LDR      r0,[r0,#0]
000006  9000              STR      r0,[sp,#0]
;;;50         mpu6500_write_muli_reg(MPU_I2CSLV0_ADDR, readBuf, 3);
000008  2203              MOVS     r2,#3
00000a  4669              MOV      r1,sp
00000c  2025              MOVS     r0,#0x25
00000e  f7fffffe          BL       mpu6500_write_muli_reg
;;;51     }
000012  bd08              POP      {r3,pc}
;;;52     
                          ENDP

                  |L8.20|
000014  8e028800          DCB      142,2,136,0

                          AREA ||i.ist8310_com_init||, CODE, READONLY, ALIGN=1

                  ist8310_com_init PROC
;;;42     
;;;43     void ist8310_com_init(void)
000000  4770              BX       lr
;;;44     {
;;;45     }
;;;46     
                          ENDP


                          AREA ||i.ist8310_delay_ms||, CODE, READONLY, ALIGN=1

                  ist8310_delay_ms PROC
;;;88     }
;;;89     void ist8310_delay_ms(uint16_t ms)
000000  b510              PUSH     {r4,lr}
;;;90     {
000002  4604              MOV      r4,r0
;;;91         delay_ms(ms);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       delay_ms
;;;92     }
00000a  bd10              POP      {r4,pc}
;;;93     void ist8310_delay_us(uint16_t us)
                          ENDP


                          AREA ||i.ist8310_delay_us||, CODE, READONLY, ALIGN=1

                  ist8310_delay_us PROC
;;;92     }
;;;93     void ist8310_delay_us(uint16_t us)
000000  b510              PUSH     {r4,lr}
;;;94     {
000002  4604              MOV      r4,r0
;;;95         delay_us(us);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       delay_us
;;;96     }
00000a  bd10              POP      {r4,pc}
;;;97     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\AHRS\\ist8310driver_middleware.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___26_ist8310driver_middleware_c_f1ccdbf2____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___26_ist8310driver_middleware_c_f1ccdbf2____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___26_ist8310driver_middleware_c_f1ccdbf2____REVSH|
#line 153
|__asm___26_ist8310driver_middleware_c_f1ccdbf2____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___26_ist8310driver_middleware_c_f1ccdbf2____RRX|
#line 328
|__asm___26_ist8310driver_middleware_c_f1ccdbf2____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
