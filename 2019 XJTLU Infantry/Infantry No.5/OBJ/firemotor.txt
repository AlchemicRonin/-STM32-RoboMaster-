; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\firemotor.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\firemotor.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-步兵3.8（二段加速)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\firemotor.crf ..\HAL\firemotor.c]
                          THUMB

                          AREA ||i.enconderSys_Configure||, CODE, READONLY, ALIGN=2

                  enconderSys_Configure PROC
;;;115    
;;;116    void enconderSys_Configure()
000000  b51c              PUSH     {r2-r4,lr}
;;;117    {
;;;118    	GPIO_InitTypeDef gpio;
;;;119    	
;;;120    /******************编码器L初始化*******************************/
;;;121        RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;122        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
00000a  2101              MOVS     r1,#1
00000c  2004              MOVS     r0,#4
00000e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;123    
;;;124    	gpio.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13;
000012  f44f5040          MOV      r0,#0x3000
000016  9000              STR      r0,[sp,#0]
;;;125        gpio.GPIO_Speed = GPIO_Speed_100MHz;
000018  2003              MOVS     r0,#3
00001a  f88d0005          STRB     r0,[sp,#5]
;;;126    	gpio.GPIO_Mode = GPIO_Mode_AF;
00001e  2002              MOVS     r0,#2
000020  f88d0004          STRB     r0,[sp,#4]
;;;127    	gpio.GPIO_PuPd = GPIO_PuPd_UP;
000024  2001              MOVS     r0,#1
000026  f88d0007          STRB     r0,[sp,#7]
;;;128    	GPIO_Init(GPIOD,&gpio);
00002a  4669              MOV      r1,sp
00002c  4821              LDR      r0,|L1.180|
00002e  f7fffffe          BL       GPIO_Init
;;;129    	
;;;130    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource12,GPIO_AF_TIM4);
000032  2202              MOVS     r2,#2
000034  210c              MOVS     r1,#0xc
000036  481f              LDR      r0,|L1.180|
000038  f7fffffe          BL       GPIO_PinAFConfig
;;;131    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource13,GPIO_AF_TIM4);
00003c  2202              MOVS     r2,#2
00003e  210d              MOVS     r1,#0xd
000040  481c              LDR      r0,|L1.180|
000042  f7fffffe          BL       GPIO_PinAFConfig
;;;132    	TIM_EncoderInterfaceConfig(TIM4, TIM_EncoderMode_TI12, TIM_ICPolarity_Falling, TIM_ICPolarity_Falling);
000046  2302              MOVS     r3,#2
000048  461a              MOV      r2,r3
00004a  2103              MOVS     r1,#3
00004c  481a              LDR      r0,|L1.184|
00004e  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;133    	TIM_Cmd(TIM4,ENABLE);
000052  2101              MOVS     r1,#1
000054  4818              LDR      r0,|L1.184|
000056  f7fffffe          BL       TIM_Cmd
;;;134    	
;;;135    	/******************编码器R初始化*******************************/
;;;136        RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOH, ENABLE);
00005a  2101              MOVS     r1,#1
00005c  2080              MOVS     r0,#0x80
00005e  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;137        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5, ENABLE);
000062  2101              MOVS     r1,#1
000064  2008              MOVS     r0,#8
000066  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;138    
;;;139    	gpio.GPIO_Pin = GPIO_Pin_10 | GPIO_Pin_11;
00006a  f44f6040          MOV      r0,#0xc00
00006e  9000              STR      r0,[sp,#0]
;;;140        gpio.GPIO_Speed = GPIO_Speed_100MHz;
000070  2003              MOVS     r0,#3
000072  f88d0005          STRB     r0,[sp,#5]
;;;141    	gpio.GPIO_Mode = GPIO_Mode_AF;
000076  2002              MOVS     r0,#2
000078  f88d0004          STRB     r0,[sp,#4]
;;;142    	gpio.GPIO_PuPd = GPIO_PuPd_UP;
00007c  2001              MOVS     r0,#1
00007e  f88d0007          STRB     r0,[sp,#7]
;;;143    	GPIO_Init(GPIOH,&gpio);
000082  4669              MOV      r1,sp
000084  480d              LDR      r0,|L1.188|
000086  f7fffffe          BL       GPIO_Init
;;;144    	
;;;145    	GPIO_PinAFConfig(GPIOH,GPIO_PinSource10,GPIO_AF_TIM5);
00008a  2202              MOVS     r2,#2
00008c  210a              MOVS     r1,#0xa
00008e  480b              LDR      r0,|L1.188|
000090  f7fffffe          BL       GPIO_PinAFConfig
;;;146    	GPIO_PinAFConfig(GPIOH,GPIO_PinSource11,GPIO_AF_TIM5);
000094  2202              MOVS     r2,#2
000096  210b              MOVS     r1,#0xb
000098  4808              LDR      r0,|L1.188|
00009a  f7fffffe          BL       GPIO_PinAFConfig
;;;147    	TIM_EncoderInterfaceConfig(TIM5, TIM_EncoderMode_TI12, TIM_ICPolarity_Falling, TIM_ICPolarity_Falling);
00009e  2302              MOVS     r3,#2
0000a0  461a              MOV      r2,r3
0000a2  2103              MOVS     r1,#3
0000a4  4806              LDR      r0,|L1.192|
0000a6  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;148    	TIM_Cmd(TIM5,ENABLE);
0000aa  2101              MOVS     r1,#1
0000ac  4804              LDR      r0,|L1.192|
0000ae  f7fffffe          BL       TIM_Cmd
;;;149    	
;;;150    }
0000b2  bd1c              POP      {r2-r4,pc}
;;;151    
                          ENDP

                  |L1.180|
                          DCD      0x40020c00
                  |L1.184|
                          DCD      0x40000800
                  |L1.188|
                          DCD      0x40021c00
                  |L1.192|
                          DCD      0x40000c00

                          AREA ||i.fireMotor||, CODE, READONLY, ALIGN=2

                  fireMotor PROC
;;;80     
;;;81     void fireMotor()//1000~1450~1900
000000  b510              PUSH     {r4,lr}
;;;82     {	
;;;83     	now_shift = rc.Shift ;
000002  481a              LDR      r0,|L2.108|
000004  7e80              LDRB     r0,[r0,#0x1a]  ; rc
000006  491a              LDR      r1,|L2.112|
000008  8008              STRH     r0,[r1,#0]
;;;84     	if(now_shift == 1 && last_shift == 0)
00000a  4608              MOV      r0,r1
00000c  8800              LDRH     r0,[r0,#0]  ; now_shift
00000e  2801              CMP      r0,#1
000010  d10b              BNE      |L2.42|
000012  4818              LDR      r0,|L2.116|
000014  8800              LDRH     r0,[r0,#0]  ; last_shift
000016  b940              CBNZ     r0,|L2.42|
;;;85     		fireFlag++;
000018  4817              LDR      r0,|L2.120|
00001a  e9d01000          LDRD     r1,r0,[r0,#0]
00001e  1c49              ADDS     r1,r1,#1
000020  f1400000          ADC      r0,r0,#0
000024  4a14              LDR      r2,|L2.120|
000026  e9c21000          STRD     r1,r0,[r2,#0]
                  |L2.42|
;;;86     	if((fireFlag % 2 == 1) || (rc.sl == 3) || (rc.sl == 2))
00002a  2202              MOVS     r2,#2
00002c  2300              MOVS     r3,#0
00002e  4912              LDR      r1,|L2.120|
000030  c903              LDM      r1,{r0,r1}
000032  f7fffffe          BL       __aeabi_uldivmod
000036  2101              MOVS     r1,#1
000038  404a              EORS     r2,r2,r1
00003a  431a              ORRS     r2,r2,r3
00003c  d007              BEQ      |L2.78|
00003e  480b              LDR      r0,|L2.108|
000040  7a00              LDRB     r0,[r0,#8]  ; rc
000042  2803              CMP      r0,#3
000044  d003              BEQ      |L2.78|
000046  4809              LDR      r0,|L2.108|
000048  7a00              LDRB     r0,[r0,#8]  ; rc
00004a  2802              CMP      r0,#2
00004c  d106              BNE      |L2.92|
                  |L2.78|
;;;87     	{
;;;88     		if(ramp_start.back_flag != 1)
00004e  480b              LDR      r0,|L2.124|
000050  7e00              LDRB     r0,[r0,#0x18]  ; ramp_start
000052  2801              CMP      r0,#1
000054  d004              BEQ      |L2.96|
;;;89     			fireMotor_fire();
000056  f7fffffe          BL       fireMotor_fire
00005a  e001              B        |L2.96|
                  |L2.92|
;;;90     	}	
;;;91     	else
;;;92     	{
;;;93     		fireMotor_stop();
00005c  f7fffffe          BL       fireMotor_stop
                  |L2.96|
;;;94     	}
;;;95     		
;;;96     	last_shift = now_shift;
000060  4803              LDR      r0,|L2.112|
000062  f9b00000          LDRSH    r0,[r0,#0]  ; now_shift
000066  4903              LDR      r1,|L2.116|
000068  8008              STRH     r0,[r1,#0]
;;;97     }
00006a  bd10              POP      {r4,pc}
;;;98     
                          ENDP

                  |L2.108|
                          DCD      ||rc||
                  |L2.112|
                          DCD      now_shift
                  |L2.116|
                          DCD      last_shift
                  |L2.120|
                          DCD      fireFlag
                  |L2.124|
                          DCD      ramp_start

                          AREA ||i.fireMotor_fire||, CODE, READONLY, ALIGN=2

                  fireMotor_fire PROC
;;;72     
;;;73     void fireMotor_fire()
000000  ed9f0a0c          VLDR     s0,|L3.52|
;;;74     {
;;;75     	ramp_start.input_L = FIRE_PWM_INPUT_ON;
000004  480c              LDR      r0,|L3.56|
000006  ed800a00          VSTR     s0,[r0,#0]
;;;76     	ramp_start.input_R = FIRE_PWM_INPUT_ON;
00000a  ed9f0a0a          VLDR     s0,|L3.52|
00000e  ed800a01          VSTR     s0,[r0,#4]
;;;77     	TIM1->CCR1 = ramp_start.out_L;
000012  ed900a02          VLDR     s0,[r0,#8]
000016  eebc0ac0          VCVT.U32.F32 s0,s0
00001a  ee100a10          VMOV     r0,s0
00001e  4907              LDR      r1,|L3.60|
000020  6348              STR      r0,[r1,#0x34]
;;;78     	TIM1->CCR4 = ramp_start.out_R;
000022  4805              LDR      r0,|L3.56|
000024  ed900a03          VLDR     s0,[r0,#0xc]
000028  eebc0ac0          VCVT.U32.F32 s0,s0
00002c  ee100a10          VMOV     r0,s0
000030  6408              STR      r0,[r1,#0x40]
;;;79     }
000032  4770              BX       lr
;;;80     
                          ENDP

                  |L3.52|
000034  44a28000          DCFS     0x44a28000 ; 1300
                  |L3.56|
                          DCD      ramp_start
                  |L3.60|
                          DCD      0x40010000

                          AREA ||i.fireMotor_keep||, CODE, READONLY, ALIGN=2

                  fireMotor_keep PROC
;;;98     
;;;99     void fireMotor_keep()
000000  b510              PUSH     {r4,lr}
;;;100    {
;;;101    	out[FIRE_MOTOR_SPEED_L] = Calculate_Current_Value(&pid[FIRE_MOTOR_SPEED_L], FIRE_SET_SPEED, fire_enconderL.filter_rate);
000002  4844              LDR      r0,|L4.276|
000004  ed900a0a          VLDR     s0,[r0,#0x28]
000008  eeb80ac0          VCVT.F32.S32 s0,s0
00000c  eef00a40          VMOV.F32 s1,s0
000010  ed9f0a41          VLDR     s0,|L4.280|
000014  4841              LDR      r0,|L4.284|
000016  f7fffffe          BL       Calculate_Current_Value
00001a  4841              LDR      r0,|L4.288|
00001c  ed800a0e          VSTR     s0,[r0,#0x38]
;;;102    	out[FIRE_MOTOR_SPEED_R] = Calculate_Current_Value(&pid[FIRE_MOTOR_SPEED_R], FIRE_SET_SPEED, fire_enconderR.filter_rate);
000020  4840              LDR      r0,|L4.292|
000022  ed900a0a          VLDR     s0,[r0,#0x28]
000026  eeb80ac0          VCVT.F32.S32 s0,s0
00002a  eef00a40          VMOV.F32 s1,s0
00002e  ed9f0a3a          VLDR     s0,|L4.280|
000032  483a              LDR      r0,|L4.284|
000034  304c              ADDS     r0,r0,#0x4c
000036  f7fffffe          BL       Calculate_Current_Value
00003a  4839              LDR      r0,|L4.288|
00003c  ed800a0f          VSTR     s0,[r0,#0x3c]
;;;103    	
;;;104    	ramp_start.pid_out_L = FIRE_PWM_INPUT_ON - out[FIRE_MOTOR_SPEED_L];
000040  ed900a0e          VLDR     s0,[r0,#0x38]
000044  eddf0a38          VLDR     s1,|L4.296|
000048  ee300ac0          VSUB.F32 s0,s1,s0
00004c  4837              LDR      r0,|L4.300|
00004e  ed800a04          VSTR     s0,[r0,#0x10]
;;;105    	ramp_start.pid_out_R = FIRE_PWM_INPUT_ON - out[FIRE_MOTOR_SPEED_R];
000052  4833              LDR      r0,|L4.288|
000054  ed900a0f          VLDR     s0,[r0,#0x3c]
000058  eddf0a33          VLDR     s1,|L4.296|
00005c  ee300ac0          VSUB.F32 s0,s1,s0
000060  4832              LDR      r0,|L4.300|
000062  ed800a05          VSTR     s0,[r0,#0x14]
;;;106    	
;;;107    	ramp_start.pid_out_L = ramp_start.pid_out_L > 1000 ? ramp_start.pid_out_L : 1000;
000066  ed900a04          VLDR     s0,[r0,#0x10]
00006a  eddf0a31          VLDR     s1,|L4.304|
00006e  eeb40ae0          VCMPE.F32 s0,s1
000072  eef1fa10          VMRS     APSR_nzcv,FPSCR
000076  dd02              BLE      |L4.126|
000078  ed900a04          VLDR     s0,[r0,#0x10]
00007c  e001              B        |L4.130|
                  |L4.126|
00007e  ed9f0a2c          VLDR     s0,|L4.304|
                  |L4.130|
000082  482a              LDR      r0,|L4.300|
000084  ed800a04          VSTR     s0,[r0,#0x10]
;;;108    	ramp_start.pid_out_L = ramp_start.pid_out_L < 1450 ? ramp_start.pid_out_L : 1450;
000088  ed900a04          VLDR     s0,[r0,#0x10]
00008c  eddf0a29          VLDR     s1,|L4.308|
000090  eeb40ae0          VCMPE.F32 s0,s1
000094  eef1fa10          VMRS     APSR_nzcv,FPSCR
000098  d202              BCS      |L4.160|
00009a  ed900a04          VLDR     s0,[r0,#0x10]
00009e  e001              B        |L4.164|
                  |L4.160|
0000a0  ed9f0a24          VLDR     s0,|L4.308|
                  |L4.164|
0000a4  4821              LDR      r0,|L4.300|
0000a6  ed800a04          VSTR     s0,[r0,#0x10]
;;;109    	ramp_start.pid_out_R = ramp_start.pid_out_R > 1000 ? ramp_start.pid_out_R : 1000;
0000aa  ed900a05          VLDR     s0,[r0,#0x14]
0000ae  eddf0a20          VLDR     s1,|L4.304|
0000b2  eeb40ae0          VCMPE.F32 s0,s1
0000b6  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000ba  dd02              BLE      |L4.194|
0000bc  ed900a05          VLDR     s0,[r0,#0x14]
0000c0  e001              B        |L4.198|
                  |L4.194|
0000c2  ed9f0a1b          VLDR     s0,|L4.304|
                  |L4.198|
0000c6  4819              LDR      r0,|L4.300|
0000c8  ed800a05          VSTR     s0,[r0,#0x14]
;;;110    	ramp_start.pid_out_R = ramp_start.pid_out_R < 1450 ? ramp_start.pid_out_R : 1450;
0000cc  ed900a05          VLDR     s0,[r0,#0x14]
0000d0  eddf0a18          VLDR     s1,|L4.308|
0000d4  eeb40ae0          VCMPE.F32 s0,s1
0000d8  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000dc  d202              BCS      |L4.228|
0000de  ed900a05          VLDR     s0,[r0,#0x14]
0000e2  e001              B        |L4.232|
                  |L4.228|
0000e4  ed9f0a13          VLDR     s0,|L4.308|
                  |L4.232|
0000e8  4810              LDR      r0,|L4.300|
0000ea  ed800a05          VSTR     s0,[r0,#0x14]
;;;111    	
;;;112    	TIM1->CCR1 = (int16_t)ramp_start.pid_out_L;
0000ee  ed900a04          VLDR     s0,[r0,#0x10]
0000f2  eebd0ac0          VCVT.S32.F32 s0,s0
0000f6  ee100a10          VMOV     r0,s0
0000fa  b200              SXTH     r0,r0
0000fc  490e              LDR      r1,|L4.312|
0000fe  6348              STR      r0,[r1,#0x34]
;;;113    	TIM1->CCR4 = (int16_t)ramp_start.pid_out_R;
000100  480a              LDR      r0,|L4.300|
000102  ed900a05          VLDR     s0,[r0,#0x14]
000106  eebd0ac0          VCVT.S32.F32 s0,s0
00010a  ee100a10          VMOV     r0,s0
00010e  b200              SXTH     r0,r0
000110  6408              STR      r0,[r1,#0x40]
;;;114    }
000112  bd10              POP      {r4,pc}
;;;115    
                          ENDP

                  |L4.276|
                          DCD      fire_enconderL
                  |L4.280|
000118  42440000          DCFS     0x42440000 ; 49
                  |L4.284|
                          DCD      pid+0x428
                  |L4.288|
                          DCD      out
                  |L4.292|
                          DCD      fire_enconderR
                  |L4.296|
000128  44a28000          DCFS     0x44a28000 ; 1300
                  |L4.300|
                          DCD      ramp_start
                  |L4.304|
000130  447a0000          DCFS     0x447a0000 ; 1000
                  |L4.308|
000134  44b54000          DCFS     0x44b54000 ; 1450
                  |L4.312|
                          DCD      0x40010000

                          AREA ||i.fireMotor_stop||, CODE, READONLY, ALIGN=2

                  fireMotor_stop PROC
;;;64     
;;;65     void fireMotor_stop()
000000  ed9f0a0c          VLDR     s0,|L5.52|
;;;66     {
;;;67     	ramp_start.input_L = FIRE_PWM_INPUT_OFF;
000004  480c              LDR      r0,|L5.56|
000006  ed800a00          VSTR     s0,[r0,#0]
;;;68     	ramp_start.input_R = FIRE_PWM_INPUT_OFF;
00000a  ed9f0a0a          VLDR     s0,|L5.52|
00000e  ed800a01          VSTR     s0,[r0,#4]
;;;69     	TIM1->CCR1 = ramp_start.out_L;
000012  ed900a02          VLDR     s0,[r0,#8]
000016  eebc0ac0          VCVT.U32.F32 s0,s0
00001a  ee100a10          VMOV     r0,s0
00001e  4907              LDR      r1,|L5.60|
000020  6348              STR      r0,[r1,#0x34]
;;;70     	TIM1->CCR4 = ramp_start.out_R;
000022  4805              LDR      r0,|L5.56|
000024  ed900a03          VLDR     s0,[r0,#0xc]
000028  eebc0ac0          VCVT.U32.F32 s0,s0
00002c  ee100a10          VMOV     r0,s0
000030  6408              STR      r0,[r1,#0x40]
;;;71     }
000032  4770              BX       lr
;;;72     
                          ENDP

                  |L5.52|
000034  44b54000          DCFS     0x44b54000 ; 1450
                  |L5.56|
                          DCD      ramp_start
                  |L5.60|
                          DCD      0x40010000

                          AREA ||i.getEnconderData_fire||, CODE, READONLY, ALIGN=2

                  getEnconderData_fire PROC
;;;151    
;;;152    void getEnconderData_fire(Fire_Enconder *Enc, char TIM_temp)
000000  b570              PUSH     {r4-r6,lr}
;;;153    {
;;;154    	int i = 0;
000002  2200              MOVS     r2,#0
;;;155    	int32_t temp_sum = 0;  
000004  2300              MOVS     r3,#0
;;;156    	
;;;157    	Enc->value_last = Enc->value;
000006  6804              LDR      r4,[r0,#0]
000008  6044              STR      r4,[r0,#4]
;;;158    	
;;;159    	if(TIM_temp == 'L')
00000a  294c              CMP      r1,#0x4c
00000c  d103              BNE      |L6.22|
;;;160    		Enc->value = TIM4->CNT;
00000e  4c20              LDR      r4,|L6.144|
000010  6824              LDR      r4,[r4,#0]
000012  6004              STR      r4,[r0,#0]
000014  e005              B        |L6.34|
                  |L6.22|
;;;161    	else if(TIM_temp == 'R')
000016  2952              CMP      r1,#0x52
000018  d103              BNE      |L6.34|
;;;162    		Enc->value = -TIM5->CNT;//摩擦轮方向相反
00001a  4c1e              LDR      r4,|L6.148|
00001c  6824              LDR      r4,[r4,#0]
00001e  4264              RSBS     r4,r4,#0
000020  6004              STR      r4,[r0,#0]
                  |L6.34|
;;;163    	
;;;164    	Enc->diff = Enc->value - Enc->value_last;
000022  e9d04500          LDRD     r4,r5,[r0,#0]
000026  1b64              SUBS     r4,r4,r5
000028  6084              STR      r4,[r0,#8]
;;;165    	
;;;166    	
;;;167    	
;;;168        if(Enc->diff > 32767)
00002a  6884              LDR      r4,[r0,#8]
00002c  f5b44f00          CMP      r4,#0x8000
000030  db05              BLT      |L6.62|
;;;169    		Enc->ecd_raw_rate = Enc->diff - 65535;
000032  6884              LDR      r4,[r0,#8]
000034  f5a4447f          SUB      r4,r4,#0xff00
000038  3cff              SUBS     r4,r4,#0xff
00003a  6244              STR      r4,[r0,#0x24]
00003c  e00b              B        |L6.86|
                  |L6.62|
;;;170        else if( Enc->diff < -32767)
00003e  6884              LDR      r4,[r0,#8]
000040  f5144f00          CMN      r4,#0x8000
000044  dc05              BGT      |L6.82|
;;;171    		Enc->ecd_raw_rate = Enc->diff + 65535;
000046  f64f75ff          MOV      r5,#0xffff
00004a  6884              LDR      r4,[r0,#8]
00004c  442c              ADD      r4,r4,r5
00004e  6244              STR      r4,[r0,#0x24]
000050  e001              B        |L6.86|
                  |L6.82|
;;;172    	else
;;;173    		Enc->ecd_raw_rate = Enc->diff;
000052  6884              LDR      r4,[r0,#8]
000054  6244              STR      r4,[r0,#0x24]
                  |L6.86|
;;;174    	
;;;175    	
;;;176    	Enc->rate_buf[Enc->buf_count++] = Enc->ecd_raw_rate;
000056  7b06              LDRB     r6,[r0,#0xc]
000058  1c74              ADDS     r4,r6,#1
00005a  6a45              LDR      r5,[r0,#0x24]
00005c  7304              STRB     r4,[r0,#0xc]
00005e  f1000410          ADD      r4,r0,#0x10
000062  f8445026          STR      r5,[r4,r6,LSL #2]
;;;177        if(Enc->buf_count == FIRE_RATE_BUF_SIZE)
000066  7b04              LDRB     r4,[r0,#0xc]
000068  2c05              CMP      r4,#5
00006a  d101              BNE      |L6.112|
;;;178    	{
;;;179    		Enc->buf_count = 0;
00006c  2400              MOVS     r4,#0
00006e  7304              STRB     r4,[r0,#0xc]
                  |L6.112|
;;;180    	}
;;;181    	//计算速度平均值
;;;182    	for(i = 0;i < FIRE_RATE_BUF_SIZE; i++)
000070  2200              MOVS     r2,#0
000072  e005              B        |L6.128|
                  |L6.116|
;;;183    	{
;;;184    		temp_sum += Enc->rate_buf[i];
000074  f1000410          ADD      r4,r0,#0x10
000078  f8544022          LDR      r4,[r4,r2,LSL #2]
00007c  4423              ADD      r3,r3,r4
00007e  1c52              ADDS     r2,r2,#1              ;182
                  |L6.128|
000080  2a05              CMP      r2,#5                 ;182
000082  dbf7              BLT      |L6.116|
;;;185    	}
;;;186    	Enc->filter_rate = (int32_t)(temp_sum/FIRE_RATE_BUF_SIZE);
000084  2405              MOVS     r4,#5
000086  fb93f4f4          SDIV     r4,r3,r4
00008a  6284              STR      r4,[r0,#0x28]
;;;187    }
00008c  bd70              POP      {r4-r6,pc}
;;;188    
                          ENDP

00008e  0000              DCW      0x0000
                  |L6.144|
                          DCD      0x40000824
                  |L6.148|
                          DCD      0x40000c24

                          AREA ||i.ramp_calc||, CODE, READONLY, ALIGN=2

                  ramp_calc PROC
;;;26     
;;;27     void ramp_calc(void)
000000  4859              LDR      r0,|L7.360|
;;;28     {
;;;29     
;;;30     	if((int16_t)ramp_start.out_L != (int16_t)ramp_start.input_L)
000002  ed900a02          VLDR     s0,[r0,#8]
000006  eebd0ac0          VCVT.S32.F32 s0,s0
00000a  ee100a10          VMOV     r0,s0
00000e  b201              SXTH     r1,r0
000010  4855              LDR      r0,|L7.360|
000012  ed900a00          VLDR     s0,[r0,#0]
000016  eebd0ac0          VCVT.S32.F32 s0,s0
00001a  ee100a10          VMOV     r0,s0
00001e  b200              SXTH     r0,r0
000020  4281              CMP      r1,r0
000022  d028              BEQ      |L7.118|
;;;31     	{
;;;32     		ramp_start.back_flag = 0;
000024  2000              MOVS     r0,#0
000026  4950              LDR      r1,|L7.360|
000028  7608              STRB     r0,[r1,#0x18]
;;;33     		if(ramp_start.out_L < ramp_start.input_L)
00002a  4608              MOV      r0,r1
00002c  ed900a02          VLDR     s0,[r0,#8]
000030  edd00a00          VLDR     s1,[r0,#0]
000034  eeb40ae0          VCMPE.F32 s0,s1
000038  eef1fa10          VMRS     APSR_nzcv,FPSCR
00003c  d208              BCS      |L7.80|
;;;34     			ramp_start.out_L += ramp_start.add_real;
00003e  ed900a02          VLDR     s0,[r0,#8]
000042  edd00a09          VLDR     s1,[r0,#0x24]
000046  ee300a20          VADD.F32 s0,s0,s1
00004a  ed800a02          VSTR     s0,[r0,#8]
00004e  e017              B        |L7.128|
                  |L7.80|
;;;35     		else if(ramp_start.out_L > ramp_start.input_L)
000050  4845              LDR      r0,|L7.360|
000052  ed900a02          VLDR     s0,[r0,#8]
000056  edd00a00          VLDR     s1,[r0,#0]
00005a  eeb40ae0          VCMPE.F32 s0,s1
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR
000062  dd0d              BLE      |L7.128|
;;;36     			ramp_start.out_L -= ramp_start.add_real;
000064  ed900a02          VLDR     s0,[r0,#8]
000068  edd00a09          VLDR     s1,[r0,#0x24]
00006c  ee300a60          VSUB.F32 s0,s0,s1
000070  ed800a02          VSTR     s0,[r0,#8]
000074  e004              B        |L7.128|
                  |L7.118|
;;;37     	}
;;;38     	else 
;;;39     	{
;;;40     		ramp_start.out_L = ramp_start.input_L;
000076  483c              LDR      r0,|L7.360|
000078  ed900a00          VLDR     s0,[r0,#0]
00007c  ed800a02          VSTR     s0,[r0,#8]
                  |L7.128|
;;;41     	}
;;;42     	
;;;43     	if((int16_t)ramp_start.out_R != (int16_t)ramp_start.input_R)
000080  4839              LDR      r0,|L7.360|
000082  ed900a03          VLDR     s0,[r0,#0xc]
000086  eebd0ac0          VCVT.S32.F32 s0,s0
00008a  ee100a10          VMOV     r0,s0
00008e  b201              SXTH     r1,r0
000090  4835              LDR      r0,|L7.360|
000092  ed900a01          VLDR     s0,[r0,#4]
000096  eebd0ac0          VCVT.S32.F32 s0,s0
00009a  ee100a10          VMOV     r0,s0
00009e  b200              SXTH     r0,r0
0000a0  4281              CMP      r1,r0
0000a2  d028              BEQ      |L7.246|
;;;44     	{
;;;45     		ramp_start.back_flag = 0;
0000a4  2000              MOVS     r0,#0
0000a6  4930              LDR      r1,|L7.360|
0000a8  7608              STRB     r0,[r1,#0x18]
;;;46     		if(ramp_start.out_R < ramp_start.input_R)
0000aa  4608              MOV      r0,r1
0000ac  ed900a03          VLDR     s0,[r0,#0xc]
0000b0  edd00a01          VLDR     s1,[r0,#4]
0000b4  eeb40ae0          VCMPE.F32 s0,s1
0000b8  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000bc  d208              BCS      |L7.208|
;;;47     			ramp_start.out_R += ramp_start.add_real;
0000be  ed900a03          VLDR     s0,[r0,#0xc]
0000c2  edd00a09          VLDR     s1,[r0,#0x24]
0000c6  ee300a20          VADD.F32 s0,s0,s1
0000ca  ed800a03          VSTR     s0,[r0,#0xc]
0000ce  e017              B        |L7.256|
                  |L7.208|
;;;48     		else if(ramp_start.out_R > ramp_start.input_R)
0000d0  4825              LDR      r0,|L7.360|
0000d2  ed900a03          VLDR     s0,[r0,#0xc]
0000d6  edd00a01          VLDR     s1,[r0,#4]
0000da  eeb40ae0          VCMPE.F32 s0,s1
0000de  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000e2  dd0d              BLE      |L7.256|
;;;49     			ramp_start.out_R -= ramp_start.add_real;
0000e4  ed900a03          VLDR     s0,[r0,#0xc]
0000e8  edd00a09          VLDR     s1,[r0,#0x24]
0000ec  ee300a60          VSUB.F32 s0,s0,s1
0000f0  ed800a03          VSTR     s0,[r0,#0xc]
0000f4  e004              B        |L7.256|
                  |L7.246|
;;;50     	}
;;;51     	else 
;;;52     	{
;;;53     		ramp_start.out_R = ramp_start.input_R;
0000f6  481c              LDR      r0,|L7.360|
0000f8  ed900a01          VLDR     s0,[r0,#4]
0000fc  ed800a03          VSTR     s0,[r0,#0xc]
                  |L7.256|
;;;54     	}
;;;55     	
;;;56     	
;;;57     	if(((int16_t)ramp_start.out_L == FIRE_PWM_INPUT_ON) && ((int16_t) ramp_start.out_R == FIRE_PWM_INPUT_ON))
000100  4819              LDR      r0,|L7.360|
000102  ed900a02          VLDR     s0,[r0,#8]
000106  eebd0ac0          VCVT.S32.F32 s0,s0
00010a  ee100a10          VMOV     r0,s0
00010e  b200              SXTH     r0,r0
000110  f2405114          MOV      r1,#0x514
000114  4288              CMP      r0,r1
000116  d10c              BNE      |L7.306|
000118  4813              LDR      r0,|L7.360|
00011a  ed900a03          VLDR     s0,[r0,#0xc]
00011e  eebd0ac0          VCVT.S32.F32 s0,s0
000122  ee100a10          VMOV     r0,s0
000126  b200              SXTH     r0,r0
000128  4288              CMP      r0,r1
00012a  d102              BNE      |L7.306|
;;;58     		ramp_start.back_flag = 1;
00012c  2001              MOVS     r0,#1
00012e  490e              LDR      r1,|L7.360|
000130  7608              STRB     r0,[r1,#0x18]
                  |L7.306|
;;;59     	if(((int16_t)ramp_start.out_L == FIRE_PWM_INPUT_OFF) && ((int16_t) ramp_start.out_R == FIRE_PWM_INPUT_OFF))
000132  480d              LDR      r0,|L7.360|
000134  ed900a02          VLDR     s0,[r0,#8]
000138  eebd0ac0          VCVT.S32.F32 s0,s0
00013c  ee100a10          VMOV     r0,s0
000140  b200              SXTH     r0,r0
000142  f24051aa          MOV      r1,#0x5aa
000146  4288              CMP      r0,r1
000148  d10c              BNE      |L7.356|
00014a  4807              LDR      r0,|L7.360|
00014c  ed900a03          VLDR     s0,[r0,#0xc]
000150  eebd0ac0          VCVT.S32.F32 s0,s0
000154  ee100a10          VMOV     r0,s0
000158  b200              SXTH     r0,r0
00015a  4288              CMP      r0,r1
00015c  d102              BNE      |L7.356|
;;;60     		ramp_start.back_flag = 2;
00015e  2002              MOVS     r0,#2
000160  4901              LDR      r1,|L7.360|
000162  7608              STRB     r0,[r1,#0x18]
                  |L7.356|
;;;61     
;;;62     
;;;63     }
000164  4770              BX       lr
;;;64     
                          ENDP

000166  0000              DCW      0x0000
                  |L7.360|
                          DCD      ramp_start

                          AREA ||i.ramp_init||, CODE, READONLY, ALIGN=2

                  ramp_init PROC
;;;10      
;;;11     void ramp_init(void)
000000  b510              PUSH     {r4,lr}
;;;12     {
;;;13     	ramp_start.frame_period = 0.001;
000002  ed9f0a15          VLDR     s0,|L8.88|
000006  4815              LDR      r0,|L8.92|
000008  ed800a07          VSTR     s0,[r0,#0x1c]
;;;14     	ramp_start.add_each_second = 100;
00000c  2064              MOVS     r0,#0x64
00000e  4913              LDR      r1,|L8.92|
000010  f8810020          STRB     r0,[r1,#0x20]
;;;15     	ramp_start.add_real = ramp_start.frame_period * ramp_start.add_each_second;
000014  4608              MOV      r0,r1
000016  edd00a07          VLDR     s1,[r0,#0x1c]
00001a  f8900020          LDRB     r0,[r0,#0x20]  ; ramp_start
00001e  ee000a10          VMOV     s0,r0
000022  eeb80a40          VCVT.F32.U32 s0,s0
000026  ee200a80          VMUL.F32 s0,s1,s0
00002a  4608              MOV      r0,r1
00002c  ed800a09          VSTR     s0,[r0,#0x24]
;;;16     	ramp_start.out_L = FIRE_PWM_INPUT_OFF;
000030  ed9f0a0b          VLDR     s0,|L8.96|
000034  ed800a02          VSTR     s0,[r0,#8]
;;;17     	ramp_start.out_R = FIRE_PWM_INPUT_OFF;
000038  ed9f0a09          VLDR     s0,|L8.96|
00003c  ed800a03          VSTR     s0,[r0,#0xc]
;;;18     	
;;;19     	
;;;20     	ramp_start.pid_out_L = FIRE_PWM_INPUT_ON;
000040  ed9f0a08          VLDR     s0,|L8.100|
000044  ed800a04          VSTR     s0,[r0,#0x10]
;;;21     	ramp_start.pid_out_R = FIRE_PWM_INPUT_ON;
000048  ed9f0a06          VLDR     s0,|L8.100|
00004c  ed800a05          VSTR     s0,[r0,#0x14]
;;;22     	
;;;23     	enconderSys_Configure();//编码器初始化
000050  f7fffffe          BL       enconderSys_Configure
;;;24     }
000054  bd10              POP      {r4,pc}
;;;25     
                          ENDP

000056  0000              DCW      0x0000
                  |L8.88|
000058  3a83126f          DCFS     0x3a83126f ; 0.0010000000474974513
                  |L8.92|
                          DCD      ramp_start
                  |L8.96|
000060  44b54000          DCFS     0x44b54000 ; 1450
                  |L8.100|
000064  44a28000          DCFS     0x44a28000 ; 1300

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  ramp_start
                          %        40
                  fire_enconderL
                          %        44
                  fire_enconderR
                          %        44

                          AREA ||.data||, DATA, ALIGN=3

                  fireFlag
000000  00000000          DCQ      0x0000000000000000
000004  00000000
                  last_shift
000008  0000              DCW      0x0000
                  now_shift
00000a  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\HAL\\firemotor.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_firemotor_c_fireFlag____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___11_firemotor_c_fireFlag____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_firemotor_c_fireFlag____REVSH|
#line 153
|__asm___11_firemotor_c_fireFlag____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_firemotor_c_fireFlag____RRX|
#line 328
|__asm___11_firemotor_c_fireFlag____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
