; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\bsp.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-步兵3.8（二段加速)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\bsp.crf ..\BSP\bsp.c]
                          THUMB

                          AREA ||i.BSP_Init||, CODE, READONLY, ALIGN=2

                  BSP_Init PROC
;;;4      
;;;5      void BSP_Init(void)						//底层初始化
000000  b538              PUSH     {r3-r5,lr}
;;;6      {
;;;7      	
;;;8      	//初始化
;;;9      	temperature_ADC_init();
000002  f7fffffe          BL       temperature_ADC_init
;;;10     	while(!get_set_temp());
000006  bf00              NOP      
                  |L1.8|
000008  f7fffffe          BL       get_set_temp
00000c  2800              CMP      r0,#0
00000e  d0fb              BEQ      |L1.8|
;;;11     //	while (ist8310_init() != IST8310_NO_ERROR);
;;;12     	Read_Offset();
000010  f7fffffe          BL       Read_Offset
;;;13     	while(mpu_temp) mpu_temp = mpu6500_init();//MPU初始化	
000014  e003              B        |L1.30|
                  |L1.22|
000016  f7fffffe          BL       mpu6500_init
00001a  4926              LDR      r1,|L1.180|
00001c  7008              STRB     r0,[r1,#0]
                  |L1.30|
00001e  4825              LDR      r0,|L1.180|
000020  7800              LDRB     r0,[r0,#0]  ; mpu_temp
000022  2800              CMP      r0,#0
000024  d1f7              BNE      |L1.22|
;;;14     	buzzer_init(30000, 90);
000026  215a              MOVS     r1,#0x5a
000028  f2475030          MOV      r0,#0x7530
00002c  f7fffffe          BL       buzzer_init
;;;15     	led_configuration();
000030  f7fffffe          BL       led_configuration
;;;16     //	while (ist8310_init() != IST8310_NO_ERROR);
;;;17     	All_Pid_Configuration(pid);//pid参数初始化
000034  4820              LDR      r0,|L1.184|
000036  f7fffffe          BL       All_Pid_Configuration
;;;18     	ALL_Pid_Incr_Configuration();
00003a  f7fffffe          BL       ALL_Pid_Incr_Configuration
;;;19     	miniPC_Init();//miniPC数据初始化
00003e  f7fffffe          BL       miniPC_Init
;;;20     	laser_configuration(); //激光
000042  f7fffffe          BL       laser_configuration
;;;21     	SHOOT_PLAN_Init();	//预置位
000046  f7fffffe          BL       SHOOT_PLAN_Init
;;;22         power_ctrl_configuration();//24输出控制口 初始化
00004a  f7fffffe          BL       power_ctrl_configuration
;;;23     	ramp_init();//摩擦轮数据初始化
00004e  f7fffffe          BL       ramp_init
;;;24     	chassis_init();	//底盘数据初始化
000052  f7fffffe          BL       chassis_init
;;;25     	TIM6_Configure();	
000056  f7fffffe          BL       TIM6_Configure
;;;26     	TIM1_FireMotor_Configure();
00005a  f7fffffe          BL       TIM1_FireMotor_Configure
;;;27     	
;;;28     	//CAN初始化
;;;29     	CAN1_mode_init(CAN_SJW_1tq, CAN_BS2_2tq, CAN_BS1_6tq, 5, CAN_Mode_Normal);
00005e  2000              MOVS     r0,#0
000060  2305              MOVS     r3,#5
000062  461a              MOV      r2,r3
000064  2101              MOVS     r1,#1
000066  9000              STR      r0,[sp,#0]
000068  f7fffffe          BL       CAN1_mode_init
;;;30     	CAN2_mode_init(CAN_SJW_1tq, CAN_BS2_2tq, CAN_BS1_6tq, 5, CAN_Mode_Normal);
00006c  2000              MOVS     r0,#0
00006e  2305              MOVS     r3,#5
000070  461a              MOV      r2,r3
000072  2101              MOVS     r1,#1
000074  9000              STR      r0,[sp,#0]
000076  f7fffffe          BL       CAN2_mode_init
;;;31     	 //24v 输出 依次上电
;;;32         for (uint8_t i = POWER1_CTRL_SWITCH; i < POWER4_CTRL_SWITCH + 1; i++)
00007a  2400              MOVS     r4,#0
00007c  e008              B        |L1.144|
                  |L1.126|
;;;33         {
;;;34             power_ctrl_on(i);
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       power_ctrl_on
;;;35             delay_us(POWER_CTRL_ONE_BY_ONE_TIME);
000084  f24020c5          MOV      r0,#0x2c5
000088  f7fffffe          BL       delay_us
00008c  1c60              ADDS     r0,r4,#1              ;32
00008e  b2c4              UXTB     r4,r0                 ;32
                  |L1.144|
000090  2c04              CMP      r4,#4                 ;32
000092  dbf4              BLT      |L1.126|
;;;36         }
;;;37     	delay_ms(1000);//等CAN发过来第一次数据
000094  f44f707a          MOV      r0,#0x3e8
000098  f7fffffe          BL       delay_ms
;;;38     	
;;;39     	//开中断	
;;;40     	Remote_uart1_init();//遥控初始化
00009c  f7fffffe          BL       Remote_uart1_init
;;;41     	miniPC_uart6_init();//miniPC通信初始化
0000a0  f7fffffe          BL       miniPC_uart6_init
;;;42     	JudgeSystem_uart7_init();//裁判系统
0000a4  f7fffffe          BL       JudgeSystem_uart7_init
;;;43     	IMU_Configure();//MPU中断初始化
0000a8  f7fffffe          BL       IMU_Configure
;;;44     	TIM6_Start();
0000ac  f7fffffe          BL       TIM6_Start
;;;45     }
0000b0  bd38              POP      {r3-r5,pc}
                          ENDP

0000b2  0000              DCW      0x0000
                  |L1.180|
                          DCD      mpu_temp
                  |L1.184|
                          DCD      pid

                          AREA ||.data||, DATA, ALIGN=0

                  mpu_temp
000000  02                DCB      0x02

;*** Start embedded assembler ***

#line 1 "..\\BSP\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_mpu_temp____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___5_bsp_c_mpu_temp____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_mpu_temp____REVSH|
#line 153
|__asm___5_bsp_c_mpu_temp____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_mpu_temp____RRX|
#line 328
|__asm___5_bsp_c_mpu_temp____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
