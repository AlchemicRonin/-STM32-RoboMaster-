; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\can1.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\can1.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-步兵3.8（二段加速)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\can1.crf ..\BSP\can1.c]
                          THUMB

                          AREA ||i.CAN1_RX0_IRQHandler||, CODE, READONLY, ALIGN=2

                  CAN1_RX0_IRQHandler PROC
;;;77     *************************************************************************/
;;;78     void CAN1_RX0_IRQHandler(void)
000000  b500              PUSH     {lr}
;;;79     {   
000002  b085              SUB      sp,sp,#0x14
;;;80     	 CanRxMsg rx_message;	
;;;81         if (CAN_GetITStatus(CAN1,CAN_IT_FMP0)!= RESET)
000004  2102              MOVS     r1,#2
000006  480b              LDR      r0,|L1.52|
000008  f7fffffe          BL       CAN_GetITStatus
00000c  b178              CBZ      r0,|L1.46|
;;;82     	{
;;;83             CAN_ClearITPendingBit(CAN1, CAN_IT_FF0);
00000e  2104              MOVS     r1,#4
000010  4808              LDR      r0,|L1.52|
000012  f7fffffe          BL       CAN_ClearITPendingBit
;;;84     		CAN_ClearFlag(CAN1, CAN_FLAG_FF0); 
000016  4908              LDR      r1,|L1.56|
000018  4806              LDR      r0,|L1.52|
00001a  f7fffffe          BL       CAN_ClearFlag
;;;85     		CAN_Receive(CAN1, CAN_FIFO0, &rx_message);
00001e  466a              MOV      r2,sp
000020  2100              MOVS     r1,#0
000022  4804              LDR      r0,|L1.52|
000024  f7fffffe          BL       CAN_Receive
;;;86     		
;;;87     		CanReceiveMsgProcess(&rx_message);
000028  4668              MOV      r0,sp
00002a  f7fffffe          BL       CanReceiveMsgProcess
                  |L1.46|
;;;88         }
;;;89     }
00002e  b005              ADD      sp,sp,#0x14
000030  bd00              POP      {pc}
                          ENDP

000032  0000              DCW      0x0000
                  |L1.52|
                          DCD      0x40006400
                  |L1.56|
                          DCD      0x32000008

                          AREA ||i.CAN1_START||, CODE, READONLY, ALIGN=2

                  CAN1_START PROC
;;;67     }
;;;68     void CAN1_START()
000000  b510              PUSH     {r4,lr}
;;;69     {
;;;70     	  CAN_ITConfig(CAN1,CAN_IT_FMP0,ENABLE);
000002  2201              MOVS     r2,#1
000004  2102              MOVS     r1,#2
000006  4804              LDR      r0,|L2.24|
000008  f7fffffe          BL       CAN_ITConfig
;;;71         CAN_ITConfig(CAN1,CAN_IT_TME,ENABLE);
00000c  2201              MOVS     r2,#1
00000e  4611              MOV      r1,r2
000010  4801              LDR      r0,|L2.24|
000012  f7fffffe          BL       CAN_ITConfig
;;;72     }
000016  bd10              POP      {r4,pc}
;;;73     
                          ENDP

                  |L2.24|
                          DCD      0x40006400

                          AREA ||i.CAN1_STOP||, CODE, READONLY, ALIGN=2

                  CAN1_STOP PROC
;;;62     }
;;;63     void CAN1_STOP()
000000  b510              PUSH     {r4,lr}
;;;64     {
;;;65     	  CAN_ITConfig(CAN1,CAN_IT_FMP0,DISABLE);
000002  2200              MOVS     r2,#0
000004  2102              MOVS     r1,#2
000006  4804              LDR      r0,|L3.24|
000008  f7fffffe          BL       CAN_ITConfig
;;;66         CAN_ITConfig(CAN1,CAN_IT_TME,DISABLE);
00000c  2200              MOVS     r2,#0
00000e  2101              MOVS     r1,#1
000010  4801              LDR      r0,|L3.24|
000012  f7fffffe          BL       CAN_ITConfig
;;;67     }
000016  bd10              POP      {r4,pc}
;;;68     void CAN1_START()
                          ENDP

                  |L3.24|
                          DCD      0x40006400

                          AREA ||i.CAN1_mode_init||, CODE, READONLY, ALIGN=2

                  CAN1_mode_init PROC
;;;5      
;;;6      uint8_t CAN1_mode_init(uint8_t tsjw, uint8_t tbs2, uint8_t tbs1, uint16_t brp, uint8_t mode)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;7      {
000004  b08a              SUB      sp,sp,#0x28
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
00000a  4616              MOV      r6,r2
00000c  461f              MOV      r7,r3
00000e  f8dd8040          LDR      r8,[sp,#0x40]
;;;8          GPIO_InitTypeDef GPIO_InitStructure;
;;;9          CAN_InitTypeDef CAN_InitStructure;
;;;10         CAN_FilterInitTypeDef CAN_FilterInitStructure;
;;;11         NVIC_InitTypeDef NVIC_InitStructure;
;;;12     
;;;13         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
000012  2101              MOVS     r1,#1
000014  2008              MOVS     r0,#8
000016  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;14     
;;;15         RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);
00001a  2101              MOVS     r1,#1
00001c  0648              LSLS     r0,r1,#25
00001e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;16     
;;;17         RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
000022  2101              MOVS     r1,#1
000024  0648              LSLS     r0,r1,#25
000026  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;18         RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
00002a  2100              MOVS     r1,#0
00002c  f04f7000          MOV      r0,#0x2000000
000030  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;19     
;;;20         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
000034  2003              MOVS     r0,#3
000036  9008              STR      r0,[sp,#0x20]
;;;21         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000038  2002              MOVS     r0,#2
00003a  f88d0024          STRB     r0,[sp,#0x24]
;;;22         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
00003e  2000              MOVS     r0,#0
000040  f88d0026          STRB     r0,[sp,#0x26]
;;;23         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000044  2003              MOVS     r0,#3
000046  f88d0025          STRB     r0,[sp,#0x25]
;;;24         GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
00004a  2001              MOVS     r0,#1
00004c  f88d0027          STRB     r0,[sp,#0x27]
;;;25         GPIO_Init(GPIOD, &GPIO_InitStructure);
000050  a908              ADD      r1,sp,#0x20
000052  482d              LDR      r0,|L4.264|
000054  f7fffffe          BL       GPIO_Init
;;;26     
;;;27         GPIO_PinAFConfig(GPIOD, GPIO_PinSource0, GPIO_AF_CAN1);
000058  2209              MOVS     r2,#9
00005a  2100              MOVS     r1,#0
00005c  482a              LDR      r0,|L4.264|
00005e  f7fffffe          BL       GPIO_PinAFConfig
;;;28         GPIO_PinAFConfig(GPIOD, GPIO_PinSource1, GPIO_AF_CAN1);
000062  2209              MOVS     r2,#9
000064  2101              MOVS     r1,#1
000066  4828              LDR      r0,|L4.264|
000068  f7fffffe          BL       GPIO_PinAFConfig
;;;29     
;;;30         CAN_InitStructure.CAN_TTCM = DISABLE;
00006c  2000              MOVS     r0,#0
00006e  f88d001a          STRB     r0,[sp,#0x1a]
;;;31         CAN_InitStructure.CAN_ABOM = ENABLE;
000072  2001              MOVS     r0,#1
000074  f88d001b          STRB     r0,[sp,#0x1b]
;;;32         CAN_InitStructure.CAN_AWUM = DISABLE;
000078  2000              MOVS     r0,#0
00007a  f88d001c          STRB     r0,[sp,#0x1c]
;;;33         CAN_InitStructure.CAN_NART = DISABLE;
00007e  f88d001d          STRB     r0,[sp,#0x1d]
;;;34         CAN_InitStructure.CAN_RFLM = DISABLE;
000082  f88d001e          STRB     r0,[sp,#0x1e]
;;;35         CAN_InitStructure.CAN_TXFP = DISABLE;
000086  f88d001f          STRB     r0,[sp,#0x1f]
;;;36         CAN_InitStructure.CAN_Mode = mode;
00008a  f88d8016          STRB     r8,[sp,#0x16]
;;;37         CAN_InitStructure.CAN_SJW = tsjw;
00008e  f88d4017          STRB     r4,[sp,#0x17]
;;;38         CAN_InitStructure.CAN_BS1 = tbs1;
000092  f88d6018          STRB     r6,[sp,#0x18]
;;;39         CAN_InitStructure.CAN_BS2 = tbs2;
000096  f88d5019          STRB     r5,[sp,#0x19]
;;;40         CAN_InitStructure.CAN_Prescaler = brp;
00009a  f8ad7014          STRH     r7,[sp,#0x14]
;;;41         CAN_Init(CAN1, &CAN_InitStructure);
00009e  a905              ADD      r1,sp,#0x14
0000a0  481a              LDR      r0,|L4.268|
0000a2  f7fffffe          BL       CAN_Init
;;;42     
;;;43         CAN_FilterInitStructure.CAN_FilterNumber = 0;
0000a6  2000              MOVS     r0,#0
0000a8  f88d000e          STRB     r0,[sp,#0xe]
;;;44         CAN_FilterInitStructure.CAN_FilterMode = CAN_FilterMode_IdMask;
0000ac  f88d000f          STRB     r0,[sp,#0xf]
;;;45         CAN_FilterInitStructure.CAN_FilterScale = CAN_FilterScale_32bit;
0000b0  2001              MOVS     r0,#1
0000b2  f88d0010          STRB     r0,[sp,#0x10]
;;;46         CAN_FilterInitStructure.CAN_FilterIdHigh = 0x0000;
0000b6  2000              MOVS     r0,#0
0000b8  f8ad0004          STRH     r0,[sp,#4]
;;;47         CAN_FilterInitStructure.CAN_FilterIdLow = 0x0000;
0000bc  f8ad0006          STRH     r0,[sp,#6]
;;;48         CAN_FilterInitStructure.CAN_FilterMaskIdHigh = 0x0000;
0000c0  f8ad0008          STRH     r0,[sp,#8]
;;;49         CAN_FilterInitStructure.CAN_FilterMaskIdLow = 0x0000;
0000c4  f8ad000a          STRH     r0,[sp,#0xa]
;;;50         CAN_FilterInitStructure.CAN_FilterFIFOAssignment = CAN_Filter_FIFO0;
0000c8  f8ad000c          STRH     r0,[sp,#0xc]
;;;51         CAN_FilterInitStructure.CAN_FilterActivation = ENABLE;
0000cc  2001              MOVS     r0,#1
0000ce  f88d0011          STRB     r0,[sp,#0x11]
;;;52         CAN_FilterInit(&CAN_FilterInitStructure);
0000d2  a801              ADD      r0,sp,#4
0000d4  f7fffffe          BL       CAN_FilterInit
;;;53     
;;;54         CAN_ITConfig(CAN1, CAN_IT_FMP0, ENABLE);
0000d8  2201              MOVS     r2,#1
0000da  2102              MOVS     r1,#2
0000dc  480b              LDR      r0,|L4.268|
0000de  f7fffffe          BL       CAN_ITConfig
;;;55     
;;;56         NVIC_InitStructure.NVIC_IRQChannel = CAN1_RX0_IRQn;
0000e2  2014              MOVS     r0,#0x14
0000e4  f88d0000          STRB     r0,[sp,#0]
;;;57         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
0000e8  2000              MOVS     r0,#0
0000ea  f88d0001          STRB     r0,[sp,#1]
;;;58         NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
0000ee  2002              MOVS     r0,#2
0000f0  f88d0002          STRB     r0,[sp,#2]
;;;59         NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0000f4  2001              MOVS     r0,#1
0000f6  f88d0003          STRB     r0,[sp,#3]
;;;60         NVIC_Init(&NVIC_InitStructure);
0000fa  4668              MOV      r0,sp
0000fc  f7fffffe          BL       NVIC_Init
;;;61         return 0;
000100  2000              MOVS     r0,#0
;;;62     }
000102  b00a              ADD      sp,sp,#0x28
000104  e8bd81f0          POP      {r4-r8,pc}
;;;63     void CAN1_STOP()
                          ENDP

                  |L4.264|
                          DCD      0x40020c00
                  |L4.268|
                          DCD      0x40006400

;*** Start embedded assembler ***

#line 1 "..\\BSP\\can1.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_can1_c_2a858fbd____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___6_can1_c_2a858fbd____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_can1_c_2a858fbd____REVSH|
#line 153
|__asm___6_can1_c_2a858fbd____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_can1_c_2a858fbd____RRX|
#line 328
|__asm___6_can1_c_2a858fbd____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
