; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\judgement_info.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\judgement_info.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-≤Ω±¯3.8£®∂˛∂Œº”ÀŸ)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\judgement_info.crf ..\BSP\judgement_info.c]
                          THUMB

                          AREA ||i.chassis_heat_control||, CODE, READONLY, ALIGN=2

                  chassis_heat_control PROC
;;;152    
;;;153    uint8_t chassis_heat_control(void)
000000  4808              LDR      r0,|L1.36|
;;;154    {
;;;155    	if(judge_rece_mesg.power_heat_data.chassis_power_buffer <= 10.0f)
000002  8d00              LDRH     r0,[r0,#0x28]
000004  ee000a10          VMOV     s0,r0
000008  eeb80a40          VCVT.F32.U32 s0,s0
00000c  eef20a04          VMOV.F32 s1,#10.00000000
000010  eeb40ae0          VCMPE.F32 s0,s1
000014  eef1fa10          VMRS     APSR_nzcv,FPSCR
000018  d801              BHI      |L1.30|
;;;156    		return 1;
00001a  2001              MOVS     r0,#1
                  |L1.28|
;;;157    	else
;;;158    		return 1;
;;;159    }
00001c  4770              BX       lr
                  |L1.30|
00001e  2001              MOVS     r0,#1                 ;158
000020  e7fc              B        |L1.28|
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      judge_rece_mesg

                          AREA ||i.judgement_data_handler||, CODE, READONLY, ALIGN=2

                  judgement_data_handler PROC
;;;14     
;;;15     void judgement_data_handler(uint8_t *p_frame)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;16     {
000004  4604              MOV      r4,r0
;;;17       frame_header_t *p_header = (frame_header_t*)p_frame;	//Â∏ßÂ§¥
000006  4625              MOV      r5,r4
;;;18       memcpy(p_header, p_frame, HEADER_LEN);
000008  6820              LDR      r0,[r4,#0]
00000a  6028              STR      r0,[r5,#0]
00000c  7920              LDRB     r0,[r4,#4]
00000e  7128              STRB     r0,[r5,#4]
;;;19     
;;;20       uint16_t data_length = p_header->data_length;		//p_headerÊòØ‰∏äÈù¢ÂÆö‰πâÁöÑÂ±ÄÈÉ®ÂèòÈáè
000010  f8b56001          LDRH     r6,[r5,#1]
;;;21       uint16_t cmd_id      = *(uint16_t *)(p_frame + HEADER_LEN); //ÊåáÈíàÊìç‰Ωú ‰∏ÄÊ¨°ÊÄßËØªÂèñ‰∏§‰∏™Â≠óËäÇÁöÑÂëΩ‰ª§Á†ÅÊï∞ÊçÆ
000014  f8b47005          LDRH     r7,[r4,#5]
;;;22       uint8_t *data_addr   = p_frame + HEADER_LEN + CMD_LEN;	//Êï∞ÊçÆÈÉ®ÂàÜÁöÑÊåáÈíà
000018  f1040807          ADD      r8,r4,#7
;;;23       uint8_t  invalid_cmd = 0;
00001c  f04f0900          MOV      r9,#0
;;;24       
;;;25       switch (cmd_id)
000020  f2402101          MOV      r1,#0x201
000024  1a78              SUBS     r0,r7,r1
000026  428f              CMP      r7,r1
000028  d048              BEQ      |L2.188|
00002a  dc12              BGT      |L2.82|
00002c  f2401101          MOV      r1,#0x101
000030  eba70001          SUB      r0,r7,r1
000034  428f              CMP      r7,r1
000036  d028              BEQ      |L2.138|
000038  dc06              BGT      |L2.72|
00003a  2f01              CMP      r7,#1
00003c  d011              BEQ      |L2.98|
00003e  2f02              CMP      r7,#2
000040  d015              BEQ      |L2.110|
000042  2f03              CMP      r7,#3
000044  d170              BNE      |L2.296|
000046  e019              B        |L2.124|
                  |L2.72|
000048  2801              CMP      r0,#1
00004a  d029              BEQ      |L2.160|
00004c  2802              CMP      r0,#2
00004e  d16b              BNE      |L2.296|
000050  e02d              B        |L2.174|
                  |L2.82|
000052  2807              CMP      r0,#7
000054  d268              BCS      |L2.296|
000056  e8dff000          TBB      [pc,r0]
00005a  673c              DCB      0x67,0x3c
00005c  434a5158          DCB      0x43,0x4a,0x51,0x58
000060  5f00              DCB      0x5f,0x00
                  |L2.98|
;;;26     		
;;;27     	
;;;28       {
;;;29     		
;;;30     		 case GAME_STATUS_DATA_ID:
;;;31                  memcpy(&judge_rece_mesg.game_rstatus_data, data_addr, data_length);
000062  4632              MOV      r2,r6
000064  4641              MOV      r1,r8
000066  4833              LDR      r0,|L2.308|
000068  f7fffffe          BL       __aeabi_memcpy
;;;32                  break;
00006c  e05f              B        |L2.302|
                  |L2.110|
;;;33     
;;;34         case GAME_RESULT_ID:
;;;35                  memcpy(&judge_rece_mesg.game_result_data, data_addr, data_length);
00006e  4632              MOV      r2,r6
000070  4641              MOV      r1,r8
000072  4830              LDR      r0,|L2.308|
000074  1cc0              ADDS     r0,r0,#3
000076  f7fffffe          BL       __aeabi_memcpy
;;;36                  break;
00007a  e058              B        |L2.302|
                  |L2.124|
;;;37     
;;;38         case ROBO_EXIST_DATA_ID:
;;;39                  memcpy(&judge_rece_mesg.robot_exis_data, data_addr, data_length);
00007c  4632              MOV      r2,r6
00007e  4641              MOV      r1,r8
000080  482c              LDR      r0,|L2.308|
000082  1d00              ADDS     r0,r0,#4
000084  f7fffffe          BL       __aeabi_memcpy
;;;40                  break;
000088  e051              B        |L2.302|
                  |L2.138|
;;;41     		
;;;42     	case COURT_EVENT_DATA_ID:
;;;43                   memcpy(&judge_rece_mesg.court_event_data, data_addr, data_length);
00008a  4632              MOV      r2,r6
00008c  4641              MOV      r1,r8
00008e  4829              LDR      r0,|L2.308|
000090  1d80              ADDS     r0,r0,#6
000092  f7fffffe          BL       __aeabi_memcpy
;;;44     	            GPIO_ResetBits(GPIOG,GPIO_Pin_3);//GPIOF9,F10ËÆæÁΩÆÈ´òÔºåÁÅØÁÅ≠***************TEST
000096  2108              MOVS     r1,#8
000098  4827              LDR      r0,|L2.312|
00009a  f7fffffe          BL       GPIO_ResetBits
;;;45     		          break;
00009e  e046              B        |L2.302|
                  |L2.160|
;;;46     
;;;47         case SUPPLY_STA_ACTION_DATA:
;;;48                    memcpy(&judge_rece_mesg.supply_act_data, data_addr, data_length);
0000a0  4632              MOV      r2,r6
0000a2  4641              MOV      r1,r8
0000a4  4823              LDR      r0,|L2.308|
0000a6  300a              ADDS     r0,r0,#0xa
0000a8  f7fffffe          BL       __aeabi_memcpy
;;;49                    break;
0000ac  e03f              B        |L2.302|
                  |L2.174|
;;;50     
;;;51         case SUPPLY_STA_REQUEST_DATA:
;;;52                     memcpy(&judge_rece_mesg.supply_request_data, data_addr, data_length);
0000ae  4632              MOV      r2,r6
0000b0  4641              MOV      r1,r8
0000b2  4820              LDR      r0,|L2.308|
0000b4  300e              ADDS     r0,r0,#0xe
0000b6  f7fffffe          BL       __aeabi_memcpy
;;;53                     break;
0000ba  e038              B        |L2.302|
                  |L2.188|
;;;54     
;;;55         case ROBO_STATE_DATA:
;;;56                     memcpy(&judge_rece_mesg.game_information, data_addr, data_length);
0000bc  4632              MOV      r2,r6
0000be  4641              MOV      r1,r8
0000c0  481c              LDR      r0,|L2.308|
0000c2  3011              ADDS     r0,r0,#0x11
0000c4  f7fffffe          BL       __aeabi_memcpy
;;;57     		copy_usatr=1111;
0000c8  f2404057          MOV      r0,#0x457
0000cc  491b              LDR      r1,|L2.316|
0000ce  6008              STR      r0,[r1,#0]  ; copy_usatr
;;;58     		
;;;59                     break;
0000d0  e02d              B        |L2.302|
;;;60         
;;;61         case REAL_POWER_ID:
;;;62                    memcpy(&judge_rece_mesg.power_heat_data, data_addr, data_length);
0000d2  4632              MOV      r2,r6
0000d4  4641              MOV      r1,r8
0000d6  4817              LDR      r0,|L2.308|
0000d8  3020              ADDS     r0,r0,#0x20
0000da  f7fffffe          BL       __aeabi_memcpy
;;;63                    break;
0000de  e026              B        |L2.302|
;;;64     
;;;65     	case ROBO_POS_DATA_ID:
;;;66     		            memcpy(&judge_rece_mesg.robot_pos_data, data_addr, data_length);
0000e0  4632              MOV      r2,r6
0000e2  4641              MOV      r1,r8
0000e4  4813              LDR      r0,|L2.308|
0000e6  302e              ADDS     r0,r0,#0x2e
0000e8  f7fffffe          BL       __aeabi_memcpy
;;;67     		             break;
0000ec  e01f              B        |L2.302|
;;;68     
;;;69     	case ROBO_BUFF_DATA:
;;;70     	            	memcpy(&judge_rece_mesg.get_buff_data, data_addr, data_length);
0000ee  4632              MOV      r2,r6
0000f0  4641              MOV      r1,r8
0000f2  4810              LDR      r0,|L2.308|
0000f4  303e              ADDS     r0,r0,#0x3e
0000f6  f7fffffe          BL       __aeabi_memcpy
;;;71     		           break;
0000fa  e018              B        |L2.302|
;;;72     
;;;73     	case SPACE_ROBO_ENERGY:
;;;74     		           memcpy(&judge_rece_mesg.space_father_data, data_addr, data_length);
0000fc  4632              MOV      r2,r6
0000fe  4641              MOV      r1,r8
000100  480c              LDR      r0,|L2.308|
000102  303f              ADDS     r0,r0,#0x3f
000104  f7fffffe          BL       __aeabi_memcpy
;;;75     		           break;
000108  e011              B        |L2.302|
;;;76     
;;;77     	case HURT_DATA:
;;;78     		           memcpy(&judge_rece_mesg.blood_changed_data, data_addr, data_length);
00010a  4632              MOV      r2,r6
00010c  4641              MOV      r1,r8
00010e  4809              LDR      r0,|L2.308|
000110  3041              ADDS     r0,r0,#0x41
000112  f7fffffe          BL       __aeabi_memcpy
;;;79     		            break;
000116  e00a              B        |L2.302|
;;;80     
;;;81     	case REAL_SHOOT_DATA:
;;;82     		          memcpy(&judge_rece_mesg.real_shoot_data, data_addr, data_length);
000118  4632              MOV      r2,r6
00011a  4641              MOV      r1,r8
00011c  4805              LDR      r0,|L2.308|
00011e  3042              ADDS     r0,r0,#0x42
000120  f7fffffe          BL       __aeabi_memcpy
;;;83     		          break;
000124  e003              B        |L2.302|
000126  e7ff              B        |L2.296|
                  |L2.296|
;;;84      
;;;85     //	case ROBO_CONNECTION_DATA:
;;;86     //		memcpy(&judge_rece_mesg.robot_pos_data, data_addr, data_length);
;;;87     //		break;
;;;88         
;;;89        default:
;;;90           invalid_cmd = 1;
000128  f04f0901          MOV      r9,#1
;;;91         break;
00012c  bf00              NOP      
                  |L2.302|
00012e  bf00              NOP                            ;32
;;;92     //    case GAME_INFO_ID:
;;;93     //											memcpy(&judge_rece_mesg.game_information, data_addr, data_length);//receive_judge_t judge_rece_mesg;		//Ë£ÅÂà§Á≥ªÁªüÊé•Êî∂Âà∞ÁöÑÊï∞ÊçÆ
;;;94     //											break;
;;;95     
;;;96     //    case REAL_BLOOD_DATA_ID:
;;;97     //											      memcpy(&judge_rece_mesg.blood_changed_data, data_addr, data_length);
;;;98     //											      break;
;;;99     
;;;100    //    case REAL_SHOOT_DATA_ID:
;;;101    //     								       memcpy(&judge_rece_mesg.real_shoot_data, data_addr, data_length);
;;;102    //   								         break;
;;;103    //		
;;;104    //		case REAL_POWER_DATA_ID:
;;;105    //      								     memcpy(&judge_rece_mesg.power_heat_data, data_addr, data_length);			
;;;106    //											     GPIO_ResetBits(GPIOG,GPIO_Pin_3);//GPIOF9,F10ËÆæÁΩÆÈ´òÔºåÁÅØÁÅ≠***************TEST
;;;107    //										        break;
;;;108    
;;;109    //    case FIELD_RFID_DATA_ID:
;;;110    //      								     memcpy(&judge_rece_mesg.rfid_data, data_addr, data_length);
;;;111    //    								       break;
;;;112    
;;;113    //    case GAME_RESULT_ID:
;;;114    //      								    memcpy(&judge_rece_mesg.game_result_data, data_addr, data_length);
;;;115    //   								        break;
;;;116    
;;;117    //    case GAIN_BUFF_ID:
;;;118    //     								     memcpy(&judge_rece_mesg.get_buff_data, data_addr, data_length);
;;;119    //   								       break;
;;;120    //    
;;;121    //    case ROBOT_POS_DATA_ID:
;;;122    //     								     memcpy(&judge_rece_mesg.robot_pos_data, data_addr, data_length);
;;;123    //   								       break;
;;;124    //    
;;;125    //    default:
;;;126    //      								invalid_cmd = 1;
;;;127    //    								break;
;;;128      }
;;;129      
;;;130      /* valid forward data */
;;;131      if (!invalid_cmd)	//Â¶ÇÊûúÊòØÊúâÊïàÁöÑÊï∞ÊçÆÂåÖÔºåÂëΩ‰ª§Á†ÅËÉΩÂØπ‰∏ä
;;;132      {
;;;133    //    data_packet_pack(cmd_id, data_addr, data_length, UP_REG_ID);
;;;134    //    osSignalSet(pc_unpack_task_t, PC_UART_TX_SIGNAL);
;;;135      }
;;;136    }
000130  e8bd87f0          POP      {r4-r10,pc}
;;;137    
                          ENDP

                  |L2.308|
                          DCD      judge_rece_mesg
                  |L2.312|
                          DCD      0x40021800
                  |L2.316|
                          DCD      copy_usatr

                          AREA ||i.shooter_heat_control||, CODE, READONLY, ALIGN=2

                  shooter_heat_control PROC
;;;138    float heat_diff = 0.0f;
;;;139    uint8_t shooter_heat_control(void)
000000  480f              LDR      r0,|L3.64|
;;;140    {
;;;141    	//Á¨¨‰∏ÄÂèëÊó†ÁÉ≠Èáè ÊàñËÄÖ Ë£ÅÂà§Á≥ªÁªüÁ¶ªÁ∫ø
;;;142    	if((int)judge_rece_mesg.game_information.shooter_heat0_cooling_limit == 0)
000002  f8b00019          LDRH     r0,[r0,#0x19]
000006  b908              CBNZ     r0,|L3.12|
;;;143    		return 1;
000008  2001              MOVS     r0,#1
                  |L3.10|
;;;144    	heat_diff = judge_rece_mesg.game_information.shooter_heat0_cooling_limit - judge_rece_mesg.power_heat_data.shooter_heat0;
;;;145    	
;;;146    	
;;;147    	if(heat_diff >= 30.0f)
;;;148    		return 1;
;;;149    	else 
;;;150    		return 0;
;;;151    }
00000a  4770              BX       lr
                  |L3.12|
00000c  480c              LDR      r0,|L3.64|
00000e  f8b01019          LDRH     r1,[r0,#0x19]         ;144
000012  8d40              LDRH     r0,[r0,#0x2a]         ;144
000014  1a08              SUBS     r0,r1,r0              ;144
000016  ee000a10          VMOV     s0,r0                 ;144
00001a  eeb80ac0          VCVT.F32.S32 s0,s0                 ;144
00001e  4809              LDR      r0,|L3.68|
000020  ed800a00          VSTR     s0,[r0,#0]            ;144
000024  ed900a00          VLDR     s0,[r0,#0]            ;147
000028  eef30a0e          VMOV.F32 s1,#30.00000000       ;147
00002c  eeb40ae0          VCMPE.F32 s0,s1                 ;147
000030  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;147
000034  db01              BLT      |L3.58|
000036  2001              MOVS     r0,#1                 ;148
000038  e7e7              B        |L3.10|
                  |L3.58|
00003a  2000              MOVS     r0,#0                 ;150
00003c  e7e5              B        |L3.10|
;;;152    
                          ENDP

00003e  0000              DCW      0x0000
                  |L3.64|
                          DCD      judge_rece_mesg
                  |L3.68|
                          DCD      heat_diff

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  judge_rece_mesg
                          %        91

                          AREA ||.data||, DATA, ALIGN=2

                  copy_usatr
                          DCD      0x00000000
                  heat_diff
000004  00000000          DCFS     0x00000000 ; 0

;*** Start embedded assembler ***

#line 1 "..\\BSP\\judgement_info.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_judgement_info_c_860d4a02____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___16_judgement_info_c_860d4a02____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_judgement_info_c_860d4a02____REVSH|
#line 153
|__asm___16_judgement_info_c_860d4a02____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_judgement_info_c_860d4a02____RRX|
#line 328
|__asm___16_judgement_info_c_860d4a02____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
