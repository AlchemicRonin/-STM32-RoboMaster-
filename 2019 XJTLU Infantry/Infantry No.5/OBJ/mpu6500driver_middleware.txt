; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\mpu6500driver_middleware.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\mpu6500driver_middleware.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\FWLIB\inc -I..\BSP -I..\HAL -I..\TASK -I..\DSP\Include -I..\AHRS -IC:\Users\15719\Desktop\Ambition-f427-步兵3.8（二段加速)\USER\RTE -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0 -IC:\Keil_v5\ARM\CMSIS\Include -IE:\MDK514\Keil\STM32F4xx_DFP\2.13.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F427X -DUSE_STDPERIPH_DRIVER -D__FPU_USED -D__FPU_PRESENT -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=..\obj\mpu6500driver_middleware.crf ..\AHRS\mpu6500driver_middleware.c]
                          THUMB

                          AREA ||i.mpu6500_GPIO_init||, CODE, READONLY, ALIGN=2

                  mpu6500_GPIO_init PROC
;;;28     
;;;29     void mpu6500_GPIO_init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;30     {
;;;31     
;;;32     #if defined(MPU6500_USE_SPI)
;;;33     
;;;34         GPIO_InitTypeDef GPIO_InitStructure;
;;;35     
;;;36         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOF, ENABLE);
000002  2101              MOVS     r1,#1
000004  2020              MOVS     r0,#0x20
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;37     
;;;38         //MPU NS
;;;39         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
00000a  2040              MOVS     r0,#0x40
00000c  9000              STR      r0,[sp,#0]
;;;40         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00000e  2001              MOVS     r0,#1
000010  f88d0004          STRB     r0,[sp,#4]
;;;41         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000014  2000              MOVS     r0,#0
000016  f88d0006          STRB     r0,[sp,#6]
;;;42         GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
00001a  2001              MOVS     r0,#1
00001c  f88d0007          STRB     r0,[sp,#7]
;;;43         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000020  2003              MOVS     r0,#3
000022  f88d0005          STRB     r0,[sp,#5]
;;;44         GPIO_Init(GPIOF, &GPIO_InitStructure);
000026  4669              MOV      r1,sp
000028  4801              LDR      r0,|L1.48|
00002a  f7fffffe          BL       GPIO_Init
;;;45     
;;;46     #elif defined(MPU6500_USE_IIC)
;;;47     
;;;48     #endif
;;;49     }
00002e  bd1c              POP      {r2-r4,pc}
;;;50     
                          ENDP

                  |L1.48|
                          DCD      0x40021400

                          AREA ||i.mpu6500_SPI_NS_H||, CODE, READONLY, ALIGN=2

                  mpu6500_SPI_NS_H PROC
;;;76     
;;;77     void mpu6500_SPI_NS_H(void)
000000  b510              PUSH     {r4,lr}
;;;78     {
;;;79         GPIO_SetBits(GPIOF, GPIO_Pin_6);
000002  2140              MOVS     r1,#0x40
000004  4801              LDR      r0,|L2.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;80     }
00000a  bd10              POP      {r4,pc}
;;;81     void mpu6500_SPI_NS_L(void)
                          ENDP

                  |L2.12|
                          DCD      0x40021400

                          AREA ||i.mpu6500_SPI_NS_L||, CODE, READONLY, ALIGN=2

                  mpu6500_SPI_NS_L PROC
;;;80     }
;;;81     void mpu6500_SPI_NS_L(void)
000000  b510              PUSH     {r4,lr}
;;;82     {
;;;83         GPIO_ResetBits(GPIOF, GPIO_Pin_6);
000002  2140              MOVS     r1,#0x40
000004  4801              LDR      r0,|L3.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;84     }
00000a  bd10              POP      {r4,pc}
;;;85     
                          ENDP

                  |L3.12|
                          DCD      0x40021400

                          AREA ||i.mpu6500_SPI_read_write_byte||, CODE, READONLY, ALIGN=2

                  mpu6500_SPI_read_write_byte PROC
;;;85     
;;;86     static uint8_t mpu6500_SPI_read_write_byte(uint8_t TxData)
000000  b570              PUSH     {r4-r6,lr}
;;;87     {
000002  4605              MOV      r5,r0
;;;88         uint8_t retry = 0;
000004  2400              MOVS     r4,#0
;;;89         while (SPI_I2S_GetFlagStatus(SPI5, SPI_I2S_FLAG_TXE) == RESET)
000006  e005              B        |L4.20|
                  |L4.8|
;;;90         {
;;;91             retry++;
000008  1c60              ADDS     r0,r4,#1
00000a  b2c4              UXTB     r4,r0
;;;92             if (retry > 200)
00000c  2cc8              CMP      r4,#0xc8
00000e  dd01              BLE      |L4.20|
;;;93             {
;;;94                 return 0;
000010  2000              MOVS     r0,#0
                  |L4.18|
;;;95             }
;;;96         }
;;;97     
;;;98         SPI_I2S_SendData(SPI5, TxData);
;;;99     
;;;100        retry = 0;
;;;101    
;;;102        while (SPI_I2S_GetFlagStatus(SPI5, SPI_I2S_FLAG_RXNE) == RESET)
;;;103        {
;;;104            retry++;
;;;105            if (retry > 200)
;;;106            {
;;;107                return 0;
;;;108            }
;;;109        }
;;;110    
;;;111        return SPI_I2S_ReceiveData(SPI5);
;;;112    }
000012  bd70              POP      {r4-r6,pc}
                  |L4.20|
000014  2102              MOVS     r1,#2                 ;89
000016  480e              LDR      r0,|L4.80|
000018  f7fffffe          BL       SPI_I2S_GetFlagStatus
00001c  2800              CMP      r0,#0                 ;89
00001e  d0f3              BEQ      |L4.8|
000020  4629              MOV      r1,r5                 ;98
000022  480b              LDR      r0,|L4.80|
000024  f7fffffe          BL       SPI_I2S_SendData
000028  2400              MOVS     r4,#0                 ;100
00002a  e005              B        |L4.56|
                  |L4.44|
00002c  1c60              ADDS     r0,r4,#1              ;104
00002e  b2c4              UXTB     r4,r0                 ;104
000030  2cc8              CMP      r4,#0xc8              ;105
000032  dd01              BLE      |L4.56|
000034  2000              MOVS     r0,#0                 ;107
000036  e7ec              B        |L4.18|
                  |L4.56|
000038  2101              MOVS     r1,#1                 ;102
00003a  4805              LDR      r0,|L4.80|
00003c  f7fffffe          BL       SPI_I2S_GetFlagStatus
000040  2800              CMP      r0,#0                 ;102
000042  d0f3              BEQ      |L4.44|
000044  4802              LDR      r0,|L4.80|
000046  f7fffffe          BL       SPI_I2S_ReceiveData
00004a  b2c0              UXTB     r0,r0                 ;111
00004c  e7e1              B        |L4.18|
;;;113    void mpu6500_write_single_reg(uint8_t reg, uint8_t data)
                          ENDP

00004e  0000              DCW      0x0000
                  |L4.80|
                          DCD      0x40015000

                          AREA ||i.mpu6500_com_init||, CODE, READONLY, ALIGN=1

                  mpu6500_com_init PROC
;;;50     
;;;51     void mpu6500_com_init(void)
000000  b510              PUSH     {r4,lr}
;;;52     {
;;;53     
;;;54     #if defined(MPU6500_USE_SPI)
;;;55         SPI5Init();
000002  f7fffffe          BL       SPI5Init
;;;56     
;;;57     #elif defined(MPU6500_USE_IIC)
;;;58     
;;;59     #else
;;;60     
;;;61     #error "Please select the communication of MPU6500"
;;;62     
;;;63     #endif
;;;64     }
000006  bd10              POP      {r4,pc}
;;;65     
                          ENDP


                          AREA ||i.mpu6500_middleware_delay_ms||, CODE, READONLY, ALIGN=1

                  mpu6500_middleware_delay_ms PROC
;;;65     
;;;66     void mpu6500_middleware_delay_ms(uint16_t ms)
000000  b510              PUSH     {r4,lr}
;;;67     {
000002  4604              MOV      r4,r0
;;;68         delay_ms(ms);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       delay_ms
;;;69     }
00000a  bd10              POP      {r4,pc}
;;;70     void mpu6500_middleware_delay_us(uint32_t us)
                          ENDP


                          AREA ||i.mpu6500_middleware_delay_us||, CODE, READONLY, ALIGN=1

                  mpu6500_middleware_delay_us PROC
;;;69     }
;;;70     void mpu6500_middleware_delay_us(uint32_t us)
000000  b510              PUSH     {r4,lr}
;;;71     {
000002  4604              MOV      r4,r0
;;;72         delay_us(us);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       delay_us
;;;73     }
00000a  bd10              POP      {r4,pc}
;;;74     
                          ENDP


                          AREA ||i.mpu6500_read_muli_reg||, CODE, READONLY, ALIGN=1

                  mpu6500_read_muli_reg PROC
;;;146    
;;;147    void mpu6500_read_muli_reg(uint8_t reg, uint8_t *buf, uint8_t len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;148    {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;149        mpu6500_SPI_NS_L();
00000a  f7fffffe          BL       mpu6500_SPI_NS_L
;;;150        mpu6500_SPI_read_write_byte(reg | MPU_SPI_READ_MSB);
00000e  f0460080          ORR      r0,r6,#0x80
000012  f7fffffe          BL       mpu6500_SPI_read_write_byte
;;;151        if (len != 0)
000016  b15d              CBZ      r5,|L8.48|
;;;152        {
;;;153            uint8_t i;
;;;154            for (i = 0; i < len; i++)
000018  2700              MOVS     r7,#0
00001a  e006              B        |L8.42|
                  |L8.28|
;;;155            {
;;;156                *buf = mpu6500_SPI_read_write_byte(0xFF);
00001c  20ff              MOVS     r0,#0xff
00001e  f7fffffe          BL       mpu6500_SPI_read_write_byte
000022  7020              STRB     r0,[r4,#0]
;;;157                buf++;
000024  1c64              ADDS     r4,r4,#1
000026  1c78              ADDS     r0,r7,#1              ;154
000028  b2c7              UXTB     r7,r0                 ;154
                  |L8.42|
00002a  42af              CMP      r7,r5                 ;154
00002c  dbf6              BLT      |L8.28|
;;;158            }
;;;159        }
00002e  bf00              NOP      
                  |L8.48|
;;;160        mpu6500_SPI_NS_H();
000030  f7fffffe          BL       mpu6500_SPI_NS_H
;;;161    }
000034  e8bd81f0          POP      {r4-r8,pc}
;;;162    
                          ENDP


                          AREA ||i.mpu6500_read_single_reg||, CODE, READONLY, ALIGN=1

                  mpu6500_read_single_reg PROC
;;;120    
;;;121    uint8_t mpu6500_read_single_reg(uint8_t reg)
000000  b570              PUSH     {r4-r6,lr}
;;;122    {
000002  4604              MOV      r4,r0
;;;123        uint8_t res;
;;;124        mpu6500_SPI_NS_L();
000004  f7fffffe          BL       mpu6500_SPI_NS_L
;;;125        mpu6500_SPI_read_write_byte(reg | MPU_SPI_READ_MSB);
000008  f0440080          ORR      r0,r4,#0x80
00000c  f7fffffe          BL       mpu6500_SPI_read_write_byte
;;;126        res = mpu6500_SPI_read_write_byte(0xFF);
000010  20ff              MOVS     r0,#0xff
000012  f7fffffe          BL       mpu6500_SPI_read_write_byte
000016  4605              MOV      r5,r0
;;;127        mpu6500_SPI_NS_H();
000018  f7fffffe          BL       mpu6500_SPI_NS_H
;;;128        return res;
00001c  4628              MOV      r0,r5
;;;129    }
00001e  bd70              POP      {r4-r6,pc}
;;;130    
                          ENDP


                          AREA ||i.mpu6500_write_muli_reg||, CODE, READONLY, ALIGN=1

                  mpu6500_write_muli_reg PROC
;;;130    
;;;131    void mpu6500_write_muli_reg(uint8_t reg, uint8_t *buf, uint8_t len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;132    {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;133        mpu6500_SPI_NS_L();
00000a  f7fffffe          BL       mpu6500_SPI_NS_L
;;;134        mpu6500_SPI_read_write_byte(reg);
00000e  4638              MOV      r0,r7
000010  f7fffffe          BL       mpu6500_SPI_read_write_byte
;;;135        if (len != 0)
000014  b155              CBZ      r5,|L10.44|
;;;136        {
;;;137            uint8_t i;
;;;138            for (i = 0; i < len; i++)
000016  2600              MOVS     r6,#0
000018  e005              B        |L10.38|
                  |L10.26|
;;;139            {
;;;140                mpu6500_SPI_read_write_byte(*buf);
00001a  7820              LDRB     r0,[r4,#0]
00001c  f7fffffe          BL       mpu6500_SPI_read_write_byte
;;;141                buf++;
000020  1c64              ADDS     r4,r4,#1
000022  1c70              ADDS     r0,r6,#1              ;138
000024  b2c6              UXTB     r6,r0                 ;138
                  |L10.38|
000026  42ae              CMP      r6,r5                 ;138
000028  dbf7              BLT      |L10.26|
;;;142            }
;;;143        }
00002a  bf00              NOP      
                  |L10.44|
;;;144        mpu6500_SPI_NS_H();
00002c  f7fffffe          BL       mpu6500_SPI_NS_H
;;;145    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;146    
                          ENDP


                          AREA ||i.mpu6500_write_single_reg||, CODE, READONLY, ALIGN=1

                  mpu6500_write_single_reg PROC
;;;112    }
;;;113    void mpu6500_write_single_reg(uint8_t reg, uint8_t data)
000000  b570              PUSH     {r4-r6,lr}
;;;114    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;115        mpu6500_SPI_NS_L();
000006  f7fffffe          BL       mpu6500_SPI_NS_L
;;;116        mpu6500_SPI_read_write_byte(reg);
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       mpu6500_SPI_read_write_byte
;;;117        mpu6500_SPI_read_write_byte(data);
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       mpu6500_SPI_read_write_byte
;;;118        mpu6500_SPI_NS_H();
000016  f7fffffe          BL       mpu6500_SPI_NS_H
;;;119    }
00001a  bd70              POP      {r4-r6,pc}
;;;120    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\AHRS\\mpu6500driver_middleware.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___26_mpu6500driver_middleware_c_e22c5515____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___26_mpu6500driver_middleware_c_e22c5515____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___26_mpu6500driver_middleware_c_e22c5515____REVSH|
#line 153
|__asm___26_mpu6500driver_middleware_c_e22c5515____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___26_mpu6500driver_middleware_c_e22c5515____RRX|
#line 328
|__asm___26_mpu6500driver_middleware_c_e22c5515____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
